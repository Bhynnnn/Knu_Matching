Index: app/src/main/java/com/example/knu_matching/main/MyViewPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.main;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentActivity;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\nimport androidx.viewpager2.adapter.FragmentStateAdapter;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MyViewPagerAdapter extends FragmentStateAdapter {\r\n    // FragmentPagerAdapter 는 Fragment 수가 작을 경우에 사용한다.\r\n    private final List<Fragment> mFragmentList = new ArrayList<>();\r\n    private final List<String> mFragTitleList = new ArrayList<>();\r\n\r\n    public MyViewPagerAdapter(@NonNull FragmentActivity fragmentActivity) {\r\n        super(fragmentActivity);\r\n    }\r\n\r\n    public void addFrag(Fragment fragment) {\r\n        mFragmentList.add(fragment);\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public Fragment createFragment(int position) {\r\n        // Fragment 교체를 보여주는 처리 구현\r\n        return mFragmentList.get(position);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        // ViewPager 로 보여줄 View의 전체 개수\r\n        return mFragmentList.size();\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/main/MyViewPagerAdapter.java b/app/src/main/java/com/example/knu_matching/main/MyViewPagerAdapter.java
--- a/app/src/main/java/com/example/knu_matching/main/MyViewPagerAdapter.java	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/app/src/main/java/com/example/knu_matching/main/MyViewPagerAdapter.java	(date 1632465768168)
@@ -3,8 +3,6 @@
 import androidx.annotation.NonNull;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentActivity;
-import androidx.fragment.app.FragmentManager;
-import androidx.fragment.app.FragmentPagerAdapter;
 import androidx.viewpager2.adapter.FragmentStateAdapter;
 
 import java.util.ArrayList;
Index: app/src/main/java/com/example/knu_matching/main/SecondFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.main;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.example.knu_matching.R;\r\n\r\npublic class SecondFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public SecondFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment Fragment4.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static SecondFragment newInstance(String param1, String param2) {\r\n        SecondFragment fragment = new SecondFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.activity_second_fragment, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/main/SecondFragment.java b/app/src/main/java/com/example/knu_matching/main/SecondFragment.java
--- a/app/src/main/java/com/example/knu_matching/main/SecondFragment.java	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/app/src/main/java/com/example/knu_matching/main/SecondFragment.java	(date 1632465152900)
@@ -1,61 +1,177 @@
 package com.example.knu_matching.main;
-
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.fragment.app.Fragment;
-
+import android.annotation.SuppressLint;
+import android.app.ActivityOptions;
+import android.app.Fragment;
+import android.content.Intent;
 import android.os.Bundle;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import androidx.annotation.Nullable;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.knu_matching.R;
+import com.example.knu_matching.UserAccount;
+import com.example.knu_matching.chatting.ChatActivity;
+import com.example.knu_matching.chatting.ChatData;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.Date;
+import java.util.List;
+import java.util.Map;
+import java.util.TimeZone;
+import java.util.TreeMap;
 
 public class SecondFragment extends Fragment {
 
-    // TODO: Rename parameter arguments, choose names that match
-    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
-    private static final String ARG_PARAM1 = "param1";
-    private static final String ARG_PARAM2 = "param2";
+
+    private SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy.MM.dd hh:mm");
 
-    // TODO: Rename and change types of parameters
-    private String mParam1;
-    private String mParam2;
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, Bundle savedInstanceState) {
+        View view = inflater.inflate(R.layout.activity_second_fragment,container,false);
 
-    public SecondFragment() {
-        // Required empty public constructor
+        RecyclerView recyclerView  = (RecyclerView) view.findViewById(R.id.chatfragment_recyclerview);
+        recyclerView.setAdapter(new ChatRecyclerViewAdapter());
+        recyclerView.setLayoutManager(new LinearLayoutManager(inflater.getContext()));
+
+        return view;
     }
 
-    /**
-     * Use this factory method to create a new instance of
-     * this fragment using the provided parameters.
-     *
-     * @param param1 Parameter 1.
-     * @param param2 Parameter 2.
-     * @return A new instance of fragment Fragment4.
-     */
-    // TODO: Rename and change types and number of parameters
-    public static SecondFragment newInstance(String param1, String param2) {
-        SecondFragment fragment = new SecondFragment();
-        Bundle args = new Bundle();
-        args.putString(ARG_PARAM1, param1);
-        args.putString(ARG_PARAM2, param2);
-        fragment.setArguments(args);
-        return fragment;
-    }
+
+    class ChatRecyclerViewAdapter extends  RecyclerView.Adapter<RecyclerView.ViewHolder>{
+
+        private List<ChatData> chatModels = new ArrayList<>();
+        private String uid;
+        private ArrayList<String> destinationUsers = new ArrayList<>();
+
+        public ChatRecyclerViewAdapter() {
+            uid = FirebaseAuth.getInstance().getCurrentUser().getUid();
+
+            FirebaseDatabase.getInstance().getReference().child("chatrooms").orderByChild("users/"+uid).equalTo(true).addListenerForSingleValueEvent(new ValueEventListener() {
+                @Override
+                public void onDataChange(DataSnapshot dataSnapshot) {
+                    chatModels.clear();
+                    for (DataSnapshot item :dataSnapshot.getChildren()){
+                        chatModels.add(item.getValue(ChatData.class));
+                    }
+                    notifyDataSetChanged();
+                }
+
+                @Override
+                public void onCancelled(DatabaseError databaseError) {
+
+                }
+            });
+        }
 
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (getArguments() != null) {
-            mParam1 = getArguments().getString(ARG_PARAM1);
-            mParam2 = getArguments().getString(ARG_PARAM2);
+        @Override
+        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_room,parent,false);
+            return new CustomViewHolder(view);
         }
-    }
 
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.activity_second_fragment, container, false);
+        @Override
+        public void onBindViewHolder(RecyclerView.ViewHolder holder, @SuppressLint("RecyclerView") int position) {
+
+
+
+            final CustomViewHolder customViewHolder = (CustomViewHolder)holder;
+            String destinationUid = null;
+
+            // 일일 챗방에 있는 유저를 체크
+            for(String user: chatModels.get(position).users.keySet()){
+                if(!user.equals(uid)){
+                    destinationUid = user;
+                    destinationUsers.add(destinationUid);
+                }
+            }
+            FirebaseDatabase.getInstance().getReference().child("users").child(destinationUid).addListenerForSingleValueEvent(new ValueEventListener() {
+                @Override
+                public void onDataChange(DataSnapshot dataSnapshot) {
+                    UserAccount userModel =  dataSnapshot.getValue(UserAccount.class);
+                    customViewHolder.textView_title.setText(userModel.getNickName());
+
+                }
+
+                @Override
+                public void onCancelled(DatabaseError databaseError) {
+
+                }
+            });
+
+            //메시지를 내림 차순으로 정렬 후 마지막 메세지의 키값을 가져옴
+            Map<String,ChatData.Comment> commentMap = new TreeMap<>(Collections.reverseOrder());
+            commentMap.putAll(chatModels.get(position).comments);
+            String lastMessageKey = (String) commentMap.keySet().toArray()[0];
+            customViewHolder.textView_last_message.setText(chatModels.get(position).comments.get(lastMessageKey).msg);
+
+            customViewHolder.itemView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View view) {
+
+                    Intent intent = new Intent(view.getContext(), ChatActivity.class);
+                    intent.putExtra("destinationUid",destinationUsers.get(position));
+
+
+                    ActivityOptions activityOptions = null;
+                    if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.JELLY_BEAN) {
+                        activityOptions = ActivityOptions.makeCustomAnimation(view.getContext(), R.anim.fromright,R.anim.toleft);
+                        startActivity(intent,activityOptions.toBundle());
+                    }
+
+
+
+
+                }
+            });
+
+
+            //TimeStamp
+            simpleDateFormat.setTimeZone(TimeZone.getTimeZone("Asia/Seoul"));
+            long unixTime = (long) chatModels.get(position).comments.get(lastMessageKey).timestamp;
+            Date date = new Date(unixTime);
+            customViewHolder.textView_timestamp.setText(simpleDateFormat.format(date));
+
+
+
+
+
+
+        }
+
+        @Override
+        public int getItemCount() {
+            return chatModels.size();
+        }
+
+        private class CustomViewHolder extends RecyclerView.ViewHolder {
+
+            public ImageView imageView;
+            public TextView textView_title;
+            public TextView textView_last_message;
+            public TextView textView_timestamp;
+
+            public CustomViewHolder(View view) {
+                super(view);
+                textView_title = (TextView)view.findViewById(R.id.chatitem_textview_title);
+                textView_last_message = (TextView)view.findViewById(R.id.chatitem_textview_lastMessage);
+                textView_timestamp = (TextView)view.findViewById(R.id.chatitem_textview_timestamp);
+            }
+        }
     }
+
+
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_second_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".main.SecondFragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"2222222222222222222\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_second_fragment.xml b/app/src/main/res/layout/activity_second_fragment.xml
--- a/app/src/main/res/layout/activity_second_fragment.xml	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/app/src/main/res/layout/activity_second_fragment.xml	(date 1632463165475)
@@ -1,14 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    tools:context=".main.SecondFragment">
-
-    <!-- TODO: Update blank fragment layout -->
-    <TextView
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+    <androidx.recyclerview.widget.RecyclerView
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:text="2222222222222222222" />
-
-</FrameLayout>
\ No newline at end of file
+        android:id="@+id/chatfragment_recyclerview"
+        ></androidx.recyclerview.widget.RecyclerView>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/knu_matching/main/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.main;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.Button;\r\n\r\nimport com.example.knu_matching.R;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.android.material.tabs.TabLayoutMediator;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    public Button btn_register, btn_logout;\r\n    private FirebaseAuth mFirebaseAuth;\r\n    private final String TAG = this.getClass().getSimpleName();\r\n    Context mContext;\r\n\r\n    private ViewPager2 mViewPager;\r\n    private MyViewPagerAdapter myPagerAdapter;\r\n    private TabLayout tabLayout;\r\n\r\n    String code;\r\n    private String[] titles = new String[]{\"리스트\", \"웹뷰\", \"연락처\"};\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        mFirebaseAuth = FirebaseAuth.getInstance();\r\n\r\n        mContext = MainActivity.this;\r\n        getSupportActionBar().hide();\r\n\r\n        //code = getIntent().getExtras().getString(\"code\"); // 다른 Activity에서 값을 넘겨 받았을 때\r\n        code = \"\";\r\n        Log.e(TAG, code);\r\n\r\n        Fragment frag1 = new FirstFragment().newInstance(code,\"\");\r\n        Fragment frag2 = new SecondFragment().newInstance(code,\"\");\r\n        Fragment frag3 = new ThirdFragment().newInstance(code,\"\");\r\n\r\n        mViewPager = findViewById(R.id.viewPager);\r\n        tabLayout = findViewById(R.id.tab_layout);\r\n\r\n        myPagerAdapter = new MyViewPagerAdapter(this);\r\n        myPagerAdapter.addFrag(frag1);\r\n        myPagerAdapter.addFrag(frag2);\r\n        myPagerAdapter.addFrag(frag3);\r\n\r\n        mViewPager.setAdapter(myPagerAdapter);\r\n\r\n        //displaying tabs\r\n        new TabLayoutMediator(tabLayout, mViewPager, (tab, position) -> tab.setText(titles[position])).attach();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/main/MainActivity.java b/app/src/main/java/com/example/knu_matching/main/MainActivity.java
--- a/app/src/main/java/com/example/knu_matching/main/MainActivity.java	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/app/src/main/java/com/example/knu_matching/main/MainActivity.java	(date 1632467312769)
@@ -26,7 +26,7 @@
     private TabLayout tabLayout;
 
     String code;
-    private String[] titles = new String[]{"리스트", "웹뷰", "연락처"};
+    private String[] titles = new String[]{"리스트", "채팅", "연락처", "친구"};
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -41,9 +41,10 @@
         code = "";
         Log.e(TAG, code);
 
-        Fragment frag1 = new FirstFragment().newInstance(code,"");
-        Fragment frag2 = new SecondFragment().newInstance(code,"");
-        Fragment frag3 = new ThirdFragment().newInstance(code,"");
+        Fragment frag1 = new FirstFragment();
+        Fragment frag2 = new Fragment();
+        Fragment frag3 = new ThirdFragment();
+        Fragment frag_people = new PeolpeFragment();
 
         mViewPager = findViewById(R.id.viewPager);
         tabLayout = findViewById(R.id.tab_layout);
@@ -52,7 +53,7 @@
         myPagerAdapter.addFrag(frag1);
         myPagerAdapter.addFrag(frag2);
         myPagerAdapter.addFrag(frag3);
-
+        myPagerAdapter.addFrag(frag_people);
         mViewPager.setAdapter(myPagerAdapter);
 
         //displaying tabs
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ /dev/null	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: app/src/main/res/layout/activity_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_chat.xml b/app/src/main/res/layout/activity_chat.xml
new file mode 100644
--- /dev/null	(date 1632463498394)
+++ b/app/src/main/res/layout/activity_chat.xml	(date 1632463498394)
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/messageActivity_reclclerview"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_above="@+id/messageActivity_button"
+        android:layout_alignParentEnd="true"
+        android:layout_alignParentLeft="true"
+        android:layout_alignParentRight="true"
+        android:layout_alignParentStart="true"
+        android:layout_alignParentTop="true"></androidx.recyclerview.widget.RecyclerView>
+
+    <EditText
+        android:id="@+id/messageActivity_editText"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentLeft="true"
+        android:layout_toLeftOf="@+id/messageActivity_button" />
+
+    <Button
+        android:id="@+id/messageActivity_button"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:layout_alignParentRight="true"
+        android:text="전송" />
+
+</RelativeLayout>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/.idea/vcs.xml	(date 1631081470843)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/edittext_box_design.xml\" value=\"0.13240740740740742\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/tab_color_selector.xml\" value=\"0.28125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_first_fragment.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml\" value=\"0.1984375\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml\" value=\"0.21770833333333334\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_second_fragment.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_third_fragment.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_idactivity.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_password.xml\" value=\"0.2640625\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml\" value=\"0.22916666666666666\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml\" value=\"0.24974358974358973\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml\" value=\"0.22864583333333333\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/.idea/misc.xml	(date 1632466799531)
@@ -3,25 +3,26 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/edittext_box_design.xml" value="0.13240740740740742" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/tab_color_selector.xml" value="0.28125" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_first_fragment.xml" value="0.26510416666666664" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml" value="0.1984375" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml" value="0.26510416666666664" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml" value="0.21770833333333334" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_second_fragment.xml" value="0.26510416666666664" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml" value="0.1" />
-        <entry key="..\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_third_fragment.xml" value="0.26510416666666664" />
-        <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_idactivity.xml" value="0.4" />
-        <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_password.xml" value="0.2640625" />
-        <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml" value="0.22916666666666666" />
-        <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml" value="0.24974358974358973" />
-        <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml" value="0.22864583333333333" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching - test1/app/src/main/res/layout/activity_chat.xml" value="0.1" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching - test1/app/src/main/res/layout/activity_peolpe_fragment.xml" value="0.1" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching - test1/app/src/main/res/layout/activity_second_fragment.xml" value="0.136" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching - test1/app/src/main/res/layout/item_frient.xml" value="0.1" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching - test1/app/src/main/res/layout/item_msg.xml" value="0.1792152704135737" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching - test1/app/src/main/res/layout/row_chat.xml" value="0.11614583333333334" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_chat.xml" value="0.33" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_find_password.xml" value="0.3651041666666667" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_first_fragment.xml" value="0.16111111111111112" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_login.xml" value="0.1" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_main.xml" value="0.125" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_second_fragment.xml" value="0.16111111111111112" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/activity_third_fragment.xml" value="0.3651041666666667" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/item_msg.xml" value="0.36614583333333334" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/msg_item.xml" value="0.36614583333333334" />
+        <entry key="..\:/Users/bhyn9/Desktop/Knu_Matching/app/src/main/res/layout/row_chat.xml" value="0.2953703703703704" />
       </map>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/example/knu_matching/chatting/ChatData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/chatting/ChatData.java b/app/src/main/java/com/example/knu_matching/chatting/ChatData.java
new file mode 100644
--- /dev/null	(date 1632460800091)
+++ b/app/src/main/java/com/example/knu_matching/chatting/ChatData.java	(date 1632460800091)
@@ -0,0 +1,35 @@
+package com.example.knu_matching.chatting;
+
+import java.util.HashMap;
+import java.util.Map;
+
+public class ChatData {
+
+    public Map<String,Boolean> users = new HashMap<>(); //채팅방 유저
+    public Map<String,Comment> comments = new HashMap<>(); //채팅 메시지
+
+    public static class Comment
+    {
+        public String uid;
+        public String msg;
+        public String nickName;
+        public Object timestamp;
+    }
+//
+//    public String getMsg() {
+//        return msg;
+//    }
+//
+//    public void setMsg(String msg) {
+//        this.msg = msg;
+//    }
+//
+//    public String getNickName() {
+//        return nickName;
+//    }
+//
+//    public void setNickName(String nickName) {
+//        this.nickName = nickName;
+//    }
+
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.knu_matching\"\r\n        minSdk 21\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'\r\n    implementation 'com.google.firebase:firebase-auth:19.2.0'\r\n    implementation 'com.google.firebase:firebase-database:20.0.1'\r\n    implementation 'androidx.viewpager2:viewpager2:1.0.0'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/app/build.gradle	(date 1631178752038)
@@ -29,7 +29,6 @@
 }
 
 dependencies {
-
     implementation 'androidx.appcompat:appcompat:1.3.1'
     implementation 'com.google.android.material:material:1.4.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
@@ -37,6 +36,8 @@
     implementation 'com.google.firebase:firebase-database:20.0.1'
     implementation 'androidx.viewpager2:viewpager2:1.0.0'
     testImplementation 'junit:junit:4.+'
+
+
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
 }
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.knu_matching\">\r\n    <!-- 권한 설정 -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Knu_Matching\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity\r\n            android:name=\".membermanage.FindPasswordActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".membermanage.FindIDActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".membermanage.Student_Certificate\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".main.MainActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".membermanage.RegisterActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".membermanage.LoginActivity\"\r\n            android:exported=\"true\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 744f4f3b87c00f46b11cd5a11c25de15713ef870)
+++ b/app/src/main/AndroidManifest.xml	(date 1632466482615)
@@ -13,6 +13,12 @@
         android:theme="@style/Theme.Knu_Matching"
         android:usesCleartextTraffic="true">
         <activity
+            android:name=".main.PeolpeFragment"
+            android:exported="true" />
+        <activity
+            android:name=".chatting.ChatActivity"
+            android:exported="true" />
+        <activity
             android:name=".membermanage.FindPasswordActivity"
             android:exported="true" />
         <activity
Index: app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java b/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java
new file mode 100644
--- /dev/null	(date 1632466086169)
+++ b/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java	(date 1632466086169)
@@ -0,0 +1,229 @@
+package com.example.knu_matching.chatting;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.example.knu_matching.R;
+import com.example.knu_matching.UserAccount;
+import com.example.knu_matching.main.MainActivity;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.ChildEventListener;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ServerValue;
+import com.google.firebase.database.ValueEventListener;
+
+import java.lang.reflect.Array;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+import java.util.TimeZone;
+
+
+public class ChatActivity extends AppCompatActivity {
+    private String destinatonUid;
+    private Button button;
+    private EditText editText;
+
+    private String uid;
+    private String chatRoomUid;
+
+    private RecyclerView recyclerView;
+
+    private SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy.MM.dd HH:mm");
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_chat);
+        uid = FirebaseAuth.getInstance().getCurrentUser().getUid();  //채팅을 요구 하는 아아디 즉 단말기에 로그인된 UID
+        destinatonUid = getIntent().getStringExtra("destinationUid"); // 채팅을 당하는 아이디
+        button = (Button) findViewById(R.id.messageActivity_button);
+        editText = (EditText) findViewById(R.id.messageActivity_editText);
+
+        recyclerView = (RecyclerView)findViewById(R.id.messageActivity_reclclerview);
+        button.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                ChatData chatModel = new ChatData();
+                chatModel.users.put(uid,true);
+                chatModel.users.put(destinatonUid,true);
+
+                if(chatRoomUid == null){
+                    button.setEnabled(false);
+                    FirebaseDatabase.getInstance().getReference().child("chatrooms").push().setValue(chatModel).addOnSuccessListener(new OnSuccessListener<Void>() {
+                        @Override
+                        public void onSuccess(Void aVoid) {
+                            checkChatRoom();
+                        }
+                    });
+
+                }else {
+                    ChatData.Comment comment = new ChatData.Comment();
+                    comment.uid = uid;
+                    comment.msg = editText.getText().toString();
+                    comment.timestamp = ServerValue.TIMESTAMP;
+                    FirebaseDatabase.getInstance().getReference().child("chatrooms").child(chatRoomUid).child("comments").push().setValue(comment).addOnCompleteListener(new OnCompleteListener<Void>() {
+                        @Override
+                        public void onComplete(@NonNull Task<Void> task) {
+                            editText.setText("");
+                        }
+                    });
+                }
+            }
+        });
+        checkChatRoom();
+    }
+
+    void  checkChatRoom(){
+        FirebaseDatabase.getInstance().getReference().child("chatrooms").orderByChild("users/"+uid).equalTo(true).addListenerForSingleValueEvent(new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                for(DataSnapshot item : dataSnapshot.getChildren()){
+                    ChatData  chatModel = item.getValue(ChatData.class);
+                    if(chatModel.users.containsKey(destinatonUid)){
+                        chatRoomUid = item.getKey();
+                        button.setEnabled(true);
+                        recyclerView.setLayoutManager(new LinearLayoutManager(ChatActivity.this));
+                        recyclerView.setAdapter(new RecyclerViewAdapter());
+                    }
+                }
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {
+
+            }
+        });
+    }
+    class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{
+
+
+        List<ChatData.Comment> comments;
+        UserAccount userModel;
+        public RecyclerViewAdapter() {
+            comments = new ArrayList<>();
+
+            FirebaseDatabase.getInstance().getReference().child("users").child(destinatonUid).addListenerForSingleValueEvent(new ValueEventListener() {
+                @Override
+                public void onDataChange(DataSnapshot dataSnapshot) {
+                    userModel = dataSnapshot.getValue(UserAccount.class);
+                    getMessageList();
+                }
+
+                @Override
+                public void onCancelled(DatabaseError databaseError) {
+
+                }
+            });
+        }
+        void getMessageList(){
+
+            FirebaseDatabase.getInstance().getReference().child("chatrooms").child(chatRoomUid).child("comments").addValueEventListener(new ValueEventListener() {
+                @Override
+                public void onDataChange(DataSnapshot dataSnapshot) {
+                    comments.clear();
+
+                    for(DataSnapshot item : dataSnapshot.getChildren()){
+                        comments.add(item.getValue(ChatData.Comment.class));
+                    }
+                    //메세지가 갱신
+                    notifyDataSetChanged();
+
+                    recyclerView.scrollToPosition(comments.size() - 1);
+                }
+
+                @Override
+                public void onCancelled(DatabaseError databaseError) {
+
+                }
+            });
+        }
+
+        @Override
+        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_message,parent,false);
+            return new MessageViewHolder(view);
+        }
+
+        @Override
+        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+            MessageViewHolder messageViewHolder = ((MessageViewHolder)holder);
+
+            //내가보낸 메세지
+            if(comments.get(position).uid.equals(uid)){
+                messageViewHolder.textView_message.setText(comments.get(position).msg);
+//                messageViewHolder.textView_message.setBackgroundResource(R.drawable.rightbubble);
+                messageViewHolder.linearLayout_destination.setVisibility(View.INVISIBLE);
+                messageViewHolder.textView_message.setTextSize(25);
+                messageViewHolder.linearLayout_main.setGravity(Gravity.RIGHT);
+                //상대방이 보낸 메세지
+            }else {
+                messageViewHolder.textview_name.setText(userModel.getNickName());
+                messageViewHolder.linearLayout_destination.setVisibility(View.VISIBLE);
+//                messageViewHolder.textView_message.setBackgroundResource(R.drawable.leftbubble);
+                messageViewHolder.textView_message.setText(comments.get(position).msg);
+                messageViewHolder.textView_message.setTextSize(25);
+                messageViewHolder.linearLayout_main.setGravity(Gravity.LEFT);
+            }
+            long unixTime = (long) comments.get(position).timestamp;
+            Date date = new Date(unixTime);
+            simpleDateFormat.setTimeZone(TimeZone.getTimeZone("Asia/Seoul"));
+            String time = simpleDateFormat.format(date);
+            messageViewHolder.textView_timestamp.setText(time);
+        }
+
+        @Override
+        public int getItemCount() {
+            return comments.size();
+        }
+
+        private class MessageViewHolder extends RecyclerView.ViewHolder {
+            public TextView textView_message;
+            public TextView textview_name;
+            public ImageView imageView_profile;
+            public LinearLayout linearLayout_destination;
+            public LinearLayout linearLayout_main;
+            public TextView textView_timestamp;
+
+            public MessageViewHolder(View view) {
+                super(view);
+                textView_message = (TextView) view.findViewById(R.id.messageItem_textView_message);
+                textview_name = (TextView)view.findViewById(R.id.messageItem_textview_name);
+                imageView_profile = (ImageView)view.findViewById(R.id.messageItem_imageview_profile);
+                linearLayout_destination = (LinearLayout)view.findViewById(R.id.messageItem_linearlayout_destination);
+                linearLayout_main = (LinearLayout)view.findViewById(R.id.messageItem_linearlayout_main);
+                textView_timestamp = (TextView)view.findViewById(R.id.messageItem_textview_timestamp);
+            }
+        }
+    }
+
+    @Override
+    public void onBackPressed() {
+        //super.onBackPressed();
+        finish();
+        overridePendingTransition(R.anim.fromleft,R.anim.toright);
+    }
+}
\ No newline at end of file
