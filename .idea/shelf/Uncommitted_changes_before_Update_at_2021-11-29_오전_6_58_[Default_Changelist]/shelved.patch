Index: app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.chatting;\r\n\r\nimport android.app.Notification;\r\nimport android.app.NotificationManager;\r\nimport android.app.PendingIntent;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.ContactsContract;\r\nimport android.util.Log;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.knu_matching.MainActivity;\r\nimport com.example.knu_matching.R;\r\n//import com.example.knu_matching.SendNotification;\r\nimport com.example.knu_matching.SendNotification;\r\nimport com.example.knu_matching.UserAccount;\r\nimport com.example.knu_matching.membermanage.FindIDActivity;\r\nimport com.example.knu_matching.membermanage.RegisterActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.api.SystemParameterRule;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.ChildEventListener;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ServerValue;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.auth.User;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.google.firebase.iid.InstanceIdResult;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\n\r\npublic class ChatActivity extends AppCompatActivity {\r\n    private ArrayList<String> user_arrayList;\r\n    private Map<String, String> arr_Nick;\r\n    private Map<String, String> token_List;\r\n    private Button button, chat_in;\r\n    private EditText editText;\r\n    private ArrayList<String> arrayList = new ArrayList<>();\r\n    private ArrayList<String> arrNick = new ArrayList<>();\r\n    private String uid, chatRoomUid, chatRoomUidd, chatRoomName, nickname;\r\n    private Integer listTagNum, roomNum;\r\n    private Boolean boo;\r\n    private Boolean chat_list;\r\n    private RecyclerView recyclerView;\r\n    private Boolean first_chat;\r\n    private FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();\r\n    private String mToken;\r\n    private SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy.MM.dd HH:mm\");\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_chat);\r\n        uid = FirebaseAuth.getInstance().getCurrentUser().getUid();  //채팅을 요구 하는 아아디 즉 단말기에 로그인된 UID\r\n        arrayList = getIntent().getStringArrayListExtra(\"invited_List\");\r\n        chat_list = getIntent().getExtras().getBoolean(\"chat_list\");\r\n        chatRoomName = getIntent().getExtras().getString(\"chatRoom_name\");\r\n        arrNick = getIntent().getStringArrayListExtra(\"arrNick\");\r\n        listTagNum = getIntent().getExtras().getInt(\"listTagNum\");\r\n        button = (Button) findViewById(R.id.messageActivity_button);\r\n        editText = (EditText) findViewById(R.id.messageActivity_editText);\r\n        recyclerView = (RecyclerView)findViewById(R.id.messageActivity_reclclerview);\r\n        final String myUid = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n        System.out.println(\"test oncreate arrNick1 \"+ arrayList);\r\n        user_arrayList = new ArrayList<String>();\r\n\r\n        roomNum=0;\r\n        System.out.println(\"test oncreate arrNick2 \"+arrayList);\r\n        Map<String, Object> map = new HashMap<>();\r\n\r\n        FirebaseMessaging.getInstance().getToken()\r\n                .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<String> task) {\r\n                        if (!task.isSuccessful()) {\r\n                            System.out.println(\"Fetching FCM registration token failed\" + task.getException());\r\n                            return;\r\n                        }\r\n                        // Get new FCM registration token\r\n                        String token = task.getResult();\r\n\r\n                        System.out.println(\"fcm map 1\" + token);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid).child(\"token\").setValue(token);\r\n\r\n                        map.put(\"fcmToken\", token);\r\n                        System.out.println(\"fcm map \" + map.keySet());\r\n                        String msg = getString(R.string.msg_token_fmt, token);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid).child(\"token\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                                mToken = snapshot.getValue().toString();\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n        //peopleFragment->chatActivity\r\n        if(chat_list == false){\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"users/\"+uid)\r\n                    .equalTo(true).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for(DataSnapshot item : dataSnapshot.getChildren()) {\r\n                        user_arrayList.clear();\r\n                        ChatModel chatModel = item.getValue(ChatModel.class);\r\n                        roomNum++;\r\n                        System.out.println(\"arrayList real item\"+ arrayList);\r\n                        for(String key : chatModel.users.keySet()){\r\n                            user_arrayList.add(key);\r\n                        }\r\n                        System.out.println(\"arrayList real user_arrayList \"+ user_arrayList);\r\n                        System.out.println(\"arrayList real \"+ arrayList);\r\n                        if ((user_arrayList.containsAll(arrayList) == true) && (user_arrayList.size() == arrayList.size())){\r\n                            Toast.makeText(ChatActivity.this, \"이미 같은 멤버와 단체방이 존재합니다.\", Toast.LENGTH_SHORT).show();\r\n                            first_chat = false;\r\n                            chatRoomUid = item.getKey();\r\n                            System.out.println(\"test chatlist false roomNum \"+ roomNum);\r\n                            System.out.println(\"test4 chatlist false chatRoomUid \"+chatRoomUid);\r\n                            button.setEnabled(true);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            continue;\r\n                        }\r\n                    }\r\n                    ChatModel chatModel = new ChatModel();\r\n                    for(String element: arrayList){\r\n                        //user uid\r\n                        System.out.println(\"test arralist element \" + element);\r\n                        chatModel.users.put(element, true);\r\n                    }\r\n                    chatModel.setChatRoomUid(chatRoomUid);\r\n                    chatModel.setRoomName(chatRoomName);\r\n                    chatModel.setRoomNum(roomNum);\r\n                    System.out.println(\"test chatModel chatModel users \"+chatModel.users);\r\n                    System.out.println(\"test chatModel arrayList \"+arrayList);\r\n                    System.out.println(\"test chatModel chatRoomUid \"+chatModel.getChatRoomUid());\r\n\r\n                    if(chatRoomUid == null){\r\n\r\n                        button.setEnabled(false);\r\n                        first_chat =true;\r\n\r\n                        FirebaseDatabase.getInstance().getReference().child(\"chatrooms\")\r\n                                .push().setValue(chatModel)\r\n                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n\r\n//                                        checkChatRoom();\r\n                                    }\r\n                                });\r\n                    }\r\n                    checkChatRoom();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n        }\r\n        //채팅 탭 ->chatActivity\r\n        else{\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"roomNum\").equalTo(listTagNum)\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            for(DataSnapshot item : dataSnapshot.getChildren()) {\r\n                                ChatModel chatModel = item.getValue(ChatModel.class);\r\n                                chatRoomUid = item.getKey();\r\n                                System.out.println(\"test dataSnapshot 666  \" + dataSnapshot);\r\n                                System.out.println(\"test item 666  \" + item);\r\n                                System.out.println(\"test listTagNum 666  \" + listTagNum);\r\n                                System.out.println(\"test chatRoomUid 666  \" + chatRoomUid);\r\n                                first_chat = false;\r\n                                recyclerView.setLayoutManager(new LinearLayoutManager(ChatActivity.this));\r\n                                recyclerView.setAdapter(new RecyclerViewAdapter());\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"users/\"+uid)\r\n                    .equalTo(true).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for (DataSnapshot item : dataSnapshot.getChildren()) {\r\n                        ChatModel chatModel = item.getValue(ChatModel.class);\r\n                        roomNum++;\r\n\r\n                        //chatModel의 users랑 arrayList의 값들이 모두 같으면\r\n                        //이미 존재하는 채팅방이라고봐야\r\n                        for (String key : chatModel.users.keySet()) {\r\n                            user_arrayList.add(key);\r\n                        }//이건 chatroom 안에 같이 있는 users arrayList\r\n\r\n\r\n                        System.out.println(\"test userarrayList \"+ user_arrayList);\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        //채팅방 내에서 메세지 전송 버튼\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View view) {\r\n                System.out.println(\"Send msg token \"+arrayList);\r\n\r\n                System.out.println(\"Send msg token1 \"+mToken);\r\n                System.out.println(\"Send msg token2 \"+map.entrySet());\r\n\r\n                if(chatRoomUid == null) {\r\n                    checkChatRoom();\r\n                }\r\n                else {\r\n                    if(editText.getText().toString().equals(\"\")){\r\n                    }\r\n                    else{\r\n                        arr_Nick = new HashMap<>();\r\n                        token_List = new HashMap<>();\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").addValueEventListener(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                for (DataSnapshot item : snapshot.getChildren()) {\r\n                                    UserAccount userAccount = item.getValue(UserAccount.class);\r\n                                    System.out.println(\"userAccount \" +userAccount.getNickName());\r\n                                    System.out.println(\"token token \" +userAccount.getToken());\r\n                                    arr_Nick.put(userAccount.getNickName(), userAccount.getUid());\r\n                                    token_List.put(userAccount.getToken(), userAccount.getUid());\r\n\r\n                                }\r\n                                ChatModel.Comment comment = new ChatModel.Comment();\r\n                                comment.uid = uid;\r\n                                comment.msg = editText.getText().toString();\r\n                                comment.timestamp = ServerValue.TIMESTAMP;\r\n                                for (String key : arr_Nick.keySet()) {\r\n                                    String value = arr_Nick.get(key);\r\n                                    if (value.equals(uid)) {\r\n                                        comment.nickname = key;\r\n                                    } else {\r\n                                        System.out.println(\"wrong\");\r\n                                    }\r\n\r\n                                }\r\n\r\n                                FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").child(chatRoomUid).child(\"users\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        for(DataSnapshot item : snapshot.getChildren()){\r\n                                            System.out.println(\"valuevaluevalue \"+ item.getKey());\r\n\r\n                                            for(String key : token_List.keySet()) {\r\n                                                String value = token_List.get(key);\r\n\r\n                                                System.out.println(\"arrayList element \"+item.getKey());\r\n                                                System.out.println(\"arrayList key \"+key);\r\n                                                System.out.println(\"arrayList value \"+value);\r\n                                                if(value.equals(item.getKey())){\r\n                                                    System.out.println(\"arrayList equals \"+item.getKey());\r\n                                                    SendNotification.sendNotification(key, \"메세지가 도착했습니다!\", comment.nickname);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                    }\r\n                                });\r\n\r\n                                FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").child(chatRoomUid).child(\"comments\").push().setValue(comment).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<Void> task) {\r\n                                        editText.setText(\"\");\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        checkChatRoom();\r\n    }\r\n\r\n    public void  checkChatRoom(){\r\n        FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"users/\"+uid).equalTo(true)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(DataSnapshot dataSnapshot) {\r\n                        for(DataSnapshot item : dataSnapshot.getChildren()){\r\n                            chatRoomUidd = item.getKey();\r\n                            System.out.println(\"test checkChatRoom chatRoomUidd \"+chatRoomUidd);\r\n                            System.out.println(\"test checkChatRoom chatRoomUid2 \"+chatRoomUid);\r\n                            System.out.println(\"test checkChatRoom first_chat \"+ first_chat);\r\n                            if(first_chat){\r\n                                chatRoomUid = chatRoomUidd;\r\n                            }\r\n                            button.setEnabled(true);\r\n                            recyclerView.setLayoutManager(new LinearLayoutManager(ChatActivity.this));\r\n                            recyclerView.setAdapter(new RecyclerViewAdapter());\r\n\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(DatabaseError databaseError) { }\r\n                });\r\n    }\r\n\r\n    class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{\r\n        List<ChatModel.Comment> comments;\r\n        UserAccount userModel;\r\n\r\n        public RecyclerViewAdapter() {\r\n            comments = new ArrayList<>();\r\n            FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid)\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            userModel = dataSnapshot.getValue(UserAccount.class);\r\n                            System.out.println(\"test please userModel \"+ userModel.uid);\r\n\r\n                            getMessageList();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n                        }\r\n                    });\r\n        }\r\n\r\n        void getMessageList(){\r\n            System.out.println(\"getMessageList chatRoomUid \" + chatRoomUid);\r\n\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").child(chatRoomUid).child(\"comments\")\r\n                    .addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            comments.clear();\r\n                            for(DataSnapshot item : dataSnapshot.getChildren()){\r\n                                comments.add(item.getValue(ChatModel.Comment.class));\r\n                                System.out.println(\"please comment item \" + item);\r\n                            }\r\n                            //메세지가 갱신\r\n                            notifyDataSetChanged();\r\n                            recyclerView.scrollToPosition(comments.size() - 1);\r\n                        }\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n        }\r\n\r\n        @Override\r\n        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_message,parent,false);\r\n            return new MessageViewHolder(view);\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\r\n            MessageViewHolder messageViewHolder = ((MessageViewHolder)holder);\r\n            //내가보낸 메세지\r\n            if(comments.get(position).uid.equals(uid)){\r\n                messageViewHolder.textView_message.setText(comments.get(position).msg);\r\n                messageViewHolder.textView_message.setBackgroundResource(R.drawable.sender);\r\n                messageViewHolder.linearLayout_destination.setVisibility(View.INVISIBLE);\r\n                messageViewHolder.textView_message.setTextSize(25);\r\n                messageViewHolder.linearLayout_main.setGravity(Gravity.RIGHT);\r\n                //상대방이 보낸 메세지\r\n            }else {\r\n                messageViewHolder.textview_name.setText(comments.get(position).nickname);\r\n                messageViewHolder.linearLayout_destination.setVisibility(View.VISIBLE);\r\n                messageViewHolder.textView_message.setBackgroundResource(R.drawable.receiver);\r\n                messageViewHolder.textView_message.setText(comments.get(position).msg);\r\n                messageViewHolder.textView_message.setTextSize(25);\r\n                messageViewHolder.linearLayout_main.setGravity(Gravity.LEFT);\r\n            }\r\n            long unixTime = (long) comments.get(position).timestamp;\r\n            Date date = new Date(unixTime);\r\n            simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"Asia/Seoul\"));\r\n            String time = simpleDateFormat.format(date);\r\n            messageViewHolder.textView_timestamp.setText(time);\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return comments.size();\r\n        }\r\n\r\n        private class MessageViewHolder extends RecyclerView.ViewHolder {\r\n            public TextView textView_message;\r\n            public TextView textview_name;\r\n            public ImageView imageView_profile;\r\n            public LinearLayout linearLayout_destination;\r\n            public LinearLayout linearLayout_main;\r\n            public TextView textView_timestamp;\r\n\r\n            public MessageViewHolder(View view) {\r\n                super(view);\r\n                textView_message = (TextView) view.findViewById(R.id.messageItem_textView_message);\r\n                textview_name = (TextView)view.findViewById(R.id.messageItem_textview_name);\r\n                linearLayout_destination = (LinearLayout)view.findViewById(R.id.messageItem_linearlayout_destination);\r\n                linearLayout_main = (LinearLayout)view.findViewById(R.id.messageItem_linearlayout_main);\r\n                textView_timestamp = (TextView)view.findViewById(R.id.messageItem_textview_timestamp);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        finish();\r\n        overridePendingTransition(R.anim.fromleft,R.anim.toright);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java b/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java
--- a/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java	(revision c1e36234406e6bd8466be6ed8c7c047b1793911c)
+++ b/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java	(date 1638136480635)
@@ -427,15 +427,16 @@
                 messageViewHolder.textView_message.setText(comments.get(position).msg);
                 messageViewHolder.textView_message.setBackgroundResource(R.drawable.sender);
                 messageViewHolder.linearLayout_destination.setVisibility(View.INVISIBLE);
-                messageViewHolder.textView_message.setTextSize(25);
+                messageViewHolder.textView_message.setTextSize(15);
                 messageViewHolder.linearLayout_main.setGravity(Gravity.RIGHT);
+
                 //상대방이 보낸 메세지
             }else {
                 messageViewHolder.textview_name.setText(comments.get(position).nickname);
                 messageViewHolder.linearLayout_destination.setVisibility(View.VISIBLE);
                 messageViewHolder.textView_message.setBackgroundResource(R.drawable.receiver);
                 messageViewHolder.textView_message.setText(comments.get(position).msg);
-                messageViewHolder.textView_message.setTextSize(25);
+                messageViewHolder.textView_message.setTextSize(15);
                 messageViewHolder.linearLayout_main.setGravity(Gravity.LEFT);
             }
             long unixTime = (long) comments.get(position).timestamp;
@@ -453,7 +454,6 @@
         private class MessageViewHolder extends RecyclerView.ViewHolder {
             public TextView textView_message;
             public TextView textview_name;
-            public ImageView imageView_profile;
             public LinearLayout linearLayout_destination;
             public LinearLayout linearLayout_main;
             public TextView textView_timestamp;
Index: app/src/main/res/layout/activity_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/messageActivity_reclclerview\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_above=\"@+id/messageActivity_button\"\r\n        android:layout_alignParentEnd=\"true\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:layout_alignParentStart=\"true\"\r\n        android:layout_alignParentTop=\"true\"></androidx.recyclerview.widget.RecyclerView>\r\n\r\n    <EditText\r\n        android:id=\"@+id/messageActivity_editText\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_alignParentLeft=\"true\"\r\n        android:layout_toLeftOf=\"@+id/messageActivity_button\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/messageActivity_button\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:layout_alignParentRight=\"true\"\r\n        android:text=\"전송\" />\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_chat.xml b/app/src/main/res/layout/activity_chat.xml
--- a/app/src/main/res/layout/activity_chat.xml	(revision c1e36234406e6bd8466be6ed8c7c047b1793911c)
+++ b/app/src/main/res/layout/activity_chat.xml	(date 1638136687441)
@@ -10,6 +10,7 @@
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_above="@+id/messageActivity_button"
+        android:layout_margin="10dp"
         android:layout_alignParentEnd="true"
         android:layout_alignParentLeft="true"
         android:layout_alignParentRight="true"
@@ -22,6 +23,7 @@
         android:layout_height="wrap_content"
         android:layout_alignParentBottom="true"
         android:layout_alignParentLeft="true"
+        android:fontFamily="@font/tway_air"
         android:layout_toLeftOf="@+id/messageActivity_button" />
 
     <Button
@@ -30,6 +32,10 @@
         android:layout_height="wrap_content"
         android:layout_alignParentBottom="true"
         android:layout_alignParentRight="true"
+        android:fontFamily="@font/tway_air"
+        android:backgroundTint="@color/mainColor"
+        android:textColor="@color/black"
+        android:textSize="18dp"
         android:text="전송" />
 
 </RelativeLayout>
\ No newline at end of file
