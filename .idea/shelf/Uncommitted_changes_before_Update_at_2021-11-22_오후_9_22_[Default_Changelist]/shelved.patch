Index: app/src/main/java/com/example/knu_matching/Post/Visitor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.Post;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.knu_matching.GetSet.CommentItem;\r\nimport com.example.knu_matching.MainActivity;\r\nimport com.example.knu_matching.R;\r\nimport com.example.knu_matching.UserAccount;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.InputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.time.LocalDateTime;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\n\r\n@RequiresApi(api = Build.VERSION_CODES.O)\r\npublic class Visitor extends AppCompatActivity {\r\n\r\n    Toolbar toolbar;\r\n    Button btn_comment, btn_participate;\r\n    TextView tv_count, tv_total, tv_StartDate, tv_EndDate, tv_file, tv_content, tv_title;\r\n    RecyclerView rv_comment;\r\n    CommentAdapter commentAdapter = null;\r\n    EditText edt_comment;\r\n    String str_participate_Nickname, str_participate_Major, str_participate_StudentId, str_participate_EmailId;\r\n    String str_title, str_count, str_total, str_StartDate, str_EndDate, str_filename, str_content, str_comment, str_email, str_Id, str_time, str_application;\r\n    public String str_Current_Email;\r\n    Intent intent;\r\n    ArrayList<CommentItem> comment_list;\r\n    Context context = this;\r\n    FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    StorageReference storageRef = storage.getReference();\r\n    int count = 0;\r\n\r\n    LocalDateTime now = LocalDateTime.now();\r\n    String formatedNow = now.format(DateTimeFormatter.ofPattern(\"yyyy_MM_dd_HH_mm_ss_SSS\"));\r\n\r\n    // Firebase\r\n    FirebaseAuth mFirebaseAuth;\r\n    DatabaseReference mDatabaseRef;\r\n    FirebaseUser user;\r\n    FirebaseAuth auth = FirebaseAuth.getInstance();\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_visitor);\r\n        //TODO: 첨부파일 작업하기\r\n\r\n        init();     // 요소 초기화 작업\r\n        // ArrayList 초기화\r\n        comment_list = new ArrayList<>();\r\n\r\n        // Adapter 초기화\r\n        commentAdapter = new CommentAdapter(comment_list);\r\n        rv_comment.setAdapter(commentAdapter);\r\n        rv_comment.setLayoutManager(new LinearLayoutManager(this, RecyclerView.VERTICAL, false));\r\n\r\n        tv_title.setText(str_title);            // 제목\r\n        tv_total.setText(str_total);            // 모집 인원\r\n        tv_StartDate.setText(str_StartDate);    // 모집 시작기간\r\n        tv_EndDate.setText(str_EndDate);        // 모집 끝나는기간\r\n        tv_content.setText(str_content);        // 내용\r\n\r\n        btn_comment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                CommentItem commentItem = new CommentItem();\r\n                commentItem.setStr_Email(auth.getCurrentUser().getEmail());\r\n                commentItem.setStr_Date(formatedNow);\r\n                commentItem.setStr_NickName(((MainActivity) MainActivity.context).strNick);\r\n                commentItem.setStr_Content(edt_comment.getText().toString());\r\n                db.collection(\"Post\").document(str_Id).collection(\"Comment\").add(commentItem)\r\n                        .addOnCompleteListener(new OnCompleteListener<DocumentReference>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<DocumentReference> task) {\r\n                                Toast.makeText(Visitor.this, \"성공\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(Visitor.this, \"실패\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // 댓글 DB 실시간으로 가져오기\r\n        db.collection(\"Post\").document(str_Id).collection(\"Comment\").orderBy(\"str_time\", Query.Direction.ASCENDING)\r\n                .addSnapshotListener(new EventListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onEvent(@Nullable QuerySnapshot value, @Nullable FirebaseFirestoreException error) {\r\n                        if (error != null) {\r\n                            System.out.println(\"Error: Post_Owner_Activity - Comment 불러오기 오류\");\r\n                            return;\r\n                        }\r\n                        for (DocumentChange doc : value.getDocumentChanges()) {\r\n                            switch (doc.getType()) {\r\n                                case ADDED:\r\n                                    System.out.println(\"오너 디버깅\" + doc.getDocument().getString(\"str_email2\"));\r\n                                    addItem(doc.getDocument().getString(\"str_email2\"), doc.getDocument().getString(\"str_Nickname2\"), doc.getDocument().getString(\"str_comment2\"), doc.getDocument().getString(\"str_time\"));\r\n                                    commentAdapter.notifyDataSetChanged();\r\n                                    break;\r\n                                case MODIFIED:\r\n                                    // 수정되었을때 작업\r\n                                    break;\r\n                                case REMOVED:\r\n                                    // 삭제되었을때 작업\r\n                                    delItem(doc.getDocument().getString(\"str_email2\"), doc.getDocument().getString(\"str_Nickname2\"), doc.getDocument().getString(\"str_comment2\"), doc.getDocument().getString(\"str_time\"));\r\n                                    commentAdapter.notifyDataSetChanged();\r\n                                    break;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n        tv_file.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                storageRef.child(str_title + \"/\" + str_application).getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                    @Override\r\n                    public void onSuccess(Uri uri) {\r\n                        new ImageDownload().execute(uri.toString());\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception exception) {\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        btn_participate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                mFirebaseAuth = FirebaseAuth.getInstance();\r\n                mDatabaseRef = FirebaseDatabase.getInstance().getReference(\"Knu_Matching\");\r\n                if (mFirebaseAuth.getCurrentUser().getEmail().equals(str_email) == false) {\r\n                    count++;\r\n                    tv_count.setText(count + \"\");\r\n                    btn_participate.setEnabled(false);\r\n                    btn_participate.setText(\"참여 완료\");\r\n\r\n                    user = FirebaseAuth.getInstance().getCurrentUser();\r\n                    db.collection(\"Account\").document(user.getEmail().replace(\".\", \">\"))\r\n                            .get().addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                UserAccount userAccount = task.getResult().toObject(UserAccount.class);\r\n                                str_participate_Nickname = userAccount.getNickName();\r\n                                str_participate_Major = userAccount.getMajor();\r\n                                str_participate_StudentId = userAccount.getStudentId();\r\n                                str_participate_EmailId = userAccount.getEmailId();\r\n                                ParticipateUser participateUser = new ParticipateUser(str_participate_Nickname, str_participate_Major, str_participate_StudentId, str_participate_EmailId);\r\n                                ParticipateUserSave(participateUser);\r\n                                Intent intent = new Intent();\r\n                                setResult(Activity.RESULT_OK, intent);\r\n                            }\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(Visitor.this, \"postActivity 오류\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                } else {\r\n                    // 게시글 작성자가 참여가 확인하는 곳\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n//        db.collection(\"Post\").document(str_Id).collection(\"Participate\")\r\n//                .whereEqualTo(\"str_participate_EmailId\", auth.getCurrentUser().getEmail()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n//            @Override\r\n//            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n//                System.out.println(\"현재 이메일\"+ auth.getCurrentUser().getEmail());\r\n//                Toast.makeText(Visitor.this,\"2222.\",Toast.LENGTH_SHORT).show();\r\n//                btn_participate.setEnabled(false);\r\n//                btn_participate.setText(\"참여 완료\");\r\n//            }\r\n//        }).addOnFailureListener(new OnFailureListener() {\r\n//            @Override\r\n//            public void onFailure(@NonNull Exception e) {\r\n//                Toast.makeText(Visitor.this,\"오류가 발생하였습니다.\",Toast.LENGTH_SHORT).show();\r\n//            }\r\n//        });\r\n    }\r\n\r\n    // 댓글 추가\r\n    private void addItem(String Email, String Nickname, String Content, String Date) {\r\n        CommentItem item = new CommentItem();\r\n\r\n        item.setStr_Email(Email);\r\n        item.setStr_NickName(Nickname);\r\n        item.setStr_Content(Content);\r\n        item.setStr_Date(Date);\r\n\r\n        comment_list.add(item);\r\n    }\r\n\r\n    // 댓글 삭제 눌렀을때 작동\r\n    private void delItem(String Email, String Nickname, String Content, String Date) {\r\n        CommentItem item = new CommentItem();\r\n\r\n        item.setStr_Email(Email);\r\n        item.setStr_NickName(Nickname);\r\n        item.setStr_Content(Content);\r\n        item.setStr_Date(Date);\r\n\r\n        comment_list.remove(item);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home:\r\n                finish();\r\n                break;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    private void init() {\r\n        // 상단 툴바 셋팅\r\n        toolbar = (Toolbar) findViewById(R.id.toolbar);             //툴바 설정\r\n        setSupportActionBar(toolbar);                               //툴바 셋업\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);      //뒤로가기 자동 생성\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);    //툴바 기본 타이틀 제거\r\n\r\n        // id 연결\r\n        btn_comment = findViewById(R.id.btn_comment);\r\n        btn_participate = findViewById(R.id.btn_participate);\r\n        tv_title = findViewById(R.id.tv_title);\r\n        tv_count = findViewById(R.id.tv_count);\r\n        tv_total = findViewById(R.id.tv_total);\r\n        tv_StartDate = findViewById(R.id.tv_StartDate);\r\n        tv_EndDate = findViewById(R.id.tv_EndDate);\r\n        tv_file = findViewById(R.id.tv_file);\r\n        tv_content = findViewById(R.id.tv_content);\r\n        rv_comment = findViewById(R.id.rv_comment);\r\n        edt_comment = findViewById(R.id.edt_comment);\r\n\r\n        // intent 값 받아오기\r\n        intent = getIntent();\r\n        str_Id = intent.getStringExtra(\"Id\");\r\n        str_title = intent.getStringExtra(\"Title\");\r\n        str_StartDate = intent.getStringExtra(\"Date\");\r\n        str_EndDate = intent.getStringExtra(\"EndDate\");\r\n        str_total = intent.getStringExtra(\"Number\");\r\n        str_content = intent.getStringExtra(\"Post\");\r\n        str_application = intent.getStringExtra(\"Application\");\r\n        str_time = intent.getStringExtra(\"Time\");\r\n        str_email = intent.getStringExtra(\"Email\");\r\n\r\n        // 접속 계정 정보\r\n        str_Current_Email = auth.getCurrentUser().getEmail();\r\n    }\r\n\r\n    private void ParticipateUserSave(ParticipateUser participateUser) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        db.collection(\"Post\").document(str_Id).collection(\"Participate\")\r\n                .document(auth.getCurrentUser().getEmail().replace(\".\",\">\")).set(participateUser).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void unused) {\r\n                Toast.makeText(Visitor.this, \"참여신청됨\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(Visitor.this, \"오류\", Toast.LENGTH_SHORT).show();\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private class ImageDownload extends AsyncTask<String, Void, Void> {\r\n\r\n        private String fileName = str_application;\r\n\r\n        private final String SAVE_FOLDER = \"/save_folder\";\r\n\r\n        @Override\r\n        protected Void doInBackground(String... params) {\r\n\r\n            String savePath = Environment.getExternalStorageDirectory().toString() + SAVE_FOLDER;\r\n\r\n            File dir = new File(savePath);\r\n\r\n            if (!dir.exists()) {\r\n                dir.mkdirs();\r\n            }\r\n\r\n            String fileUrl = params[0];\r\n\r\n            if (new File(savePath + \"/\" + fileName).exists() == false) {\r\n            } else {\r\n            }\r\n\r\n            String localPath = savePath + \"/\" + fileName + \".jpg\";\r\n\r\n            try {\r\n                URL imgUrl = new URL(fileUrl);\r\n                HttpURLConnection conn = (HttpURLConnection) imgUrl.openConnection();\r\n                int len = conn.getContentLength();\r\n                byte[] tmpByte = new byte[len];\r\n                InputStream is = conn.getInputStream();\r\n                File file = new File(localPath);\r\n                FileOutputStream fos = new FileOutputStream(file);\r\n                int read;\r\n                for (; ; ) {\r\n                    read = is.read(tmpByte);\r\n                    if (read <= 0) {\r\n                        break;\r\n                    }\r\n                    fos.write(tmpByte, 0, read);\r\n                }\r\n                is.close();\r\n                fos.close();\r\n                conn.disconnect();\r\n            } catch (Exception e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Void result) {\r\n            super.onPostExecute(result);\r\n            String targetDir = Environment.getExternalStorageDirectory().toString() + SAVE_FOLDER;\r\n            File file = new File(targetDir + \"/\" + fileName + \".jpg\");\r\n            sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.fromFile(file)));\r\n            Toast.makeText(Visitor.this, \"갤러리에 저장되었습니다.\", Toast.LENGTH_SHORT).show();\r\n            finish();\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/Post/Visitor.java b/app/src/main/java/com/example/knu_matching/Post/Visitor.java
--- a/app/src/main/java/com/example/knu_matching/Post/Visitor.java	(revision f0b360f410c6cdcd2db63e49b14fe3cf09104033)
+++ b/app/src/main/java/com/example/knu_matching/Post/Visitor.java	(date 1637582195165)
@@ -32,6 +32,7 @@
 import com.example.knu_matching.MainActivity;
 import com.example.knu_matching.R;
 import com.example.knu_matching.UserAccount;
+import com.example.knu_matching.membermanage.RegisterActivity;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnFailureListener;
 import com.google.android.gms.tasks.OnSuccessListener;
@@ -220,21 +221,24 @@
         });
 
 
-//        db.collection("Post").document(str_Id).collection("Participate")
-//                .whereEqualTo("str_participate_EmailId", auth.getCurrentUser().getEmail()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
-//            @Override
-//            public void onComplete(@NonNull Task<QuerySnapshot> task) {
-//                System.out.println("현재 이메일"+ auth.getCurrentUser().getEmail());
-//                Toast.makeText(Visitor.this,"2222.",Toast.LENGTH_SHORT).show();
-//                btn_participate.setEnabled(false);
-//                btn_participate.setText("참여 완료");
-//            }
-//        }).addOnFailureListener(new OnFailureListener() {
-//            @Override
-//            public void onFailure(@NonNull Exception e) {
-//                Toast.makeText(Visitor.this,"오류가 발생하였습니다.",Toast.LENGTH_SHORT).show();
-//            }
-//        });
+        db.collection("Post").document(str_Id).collection("Participate")
+                .whereEqualTo("str_participate_EmailId", auth.getCurrentUser().getEmail()).get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+            @Override
+            public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                if (task.isSuccessful()) {
+                    btn_participate.setEnabled(false);
+                    btn_participate.setText("참여 완료");
+                    System.out.println("들어옴!1");
+
+                } else {
+                    btn_participate.setEnabled(true);
+                    btn_participate.setText("참여 하기");
+
+                }
+            }
+
+        });
+
     }
 
     // 댓글 추가
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\Excellent_Summer\\.android\\avd\\Pixel_2_API_28.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2021-11-22T06:27:30.556453400Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision f0b360f410c6cdcd2db63e49b14fe3cf09104033)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1637582469368)
@@ -13,5 +13,17 @@
       </Target>
     </targetSelectedWithDropDown>
     <timeTargetWasSelectedWithDropDown value="2021-11-22T06:27:30.556453400Z" />
+    <multipleDevicesSelectedInDropDown value="true" />
+    <runningDeviceTargetsSelectedWithDialog>
+      <Target>
+        <type value="RUNNING_DEVICE_TARGET" />
+        <deviceKey>
+          <Key>
+            <type value="SERIAL_NUMBER" />
+            <value value="ce02160248897b3e02" />
+          </Key>
+        </deviceKey>
+      </Target>
+    </runningDeviceTargetsSelectedWithDialog>
   </component>
 </project>
\ No newline at end of file
