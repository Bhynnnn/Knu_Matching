Index: app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.chatting;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Gravity;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.knu_matching.MainActivity;\r\nimport com.example.knu_matching.R;\r\n//import com.example.knu_matching.SendNotification;\r\nimport com.example.knu_matching.SendNotification;\r\nimport com.example.knu_matching.UserAccount;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ServerValue;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.TimeZone;\r\n\r\n\r\npublic class ChatActivity extends AppCompatActivity {\r\n    private ArrayList<String> user_arrayList;\r\n    private Map<String, String> arr_Nick;\r\n    private Map<String, String> token_List;\r\n    private ImageButton button, chat_in;\r\n    private EditText editText;\r\n    private ArrayList<String> arrayList = new ArrayList<>();\r\n    private ArrayList<String> arrNick = new ArrayList<>();\r\n    ArrayList<String> arr_participated_uid = new ArrayList<>();\r\n    private String uid, chatRoomUid, chatRoomUidd, chatRoomName, nickname;\r\n    private Integer listTagNum, roomNum;\r\n    private RecyclerView recyclerView;\r\n    private Boolean first_chat, isMyPost, chat_list;\r\n    private FirebaseDatabase firebaseDatabase = FirebaseDatabase.getInstance();\r\n    private String mToken;\r\n    private SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyy.MM.dd HH:mm\");\r\n    String str_Num, str_roomName;\r\n    Toolbar toolbar;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_chat);\r\n        toolbar = (Toolbar) findViewById(R.id.toolbar);             //툴바 설정\r\n        setSupportActionBar(toolbar);                               //툴바 셋업\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);      //뒤로가기 자동 생성\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);    //툴바 기본 타이틀 제거\r\n        uid = FirebaseAuth.getInstance().getCurrentUser().getUid();  //채팅을 요구 하는 아아디 즉 단말기에 로그인된 UID\r\n        arrayList = getIntent().getStringArrayListExtra(\"invited_List\");\r\n        chat_list = getIntent().getExtras().getBoolean(\"chat_list\");\r\n        chatRoomName = getIntent().getExtras().getString(\"chatRoom_name\");\r\n        arrNick = getIntent().getStringArrayListExtra(\"arrNick\");\r\n        str_Num = getIntent().getStringExtra(\"Number\");\r\n        arr_participated_uid = getIntent().getStringArrayListExtra(\"participated_uid\");\r\n        str_roomName =getIntent().getExtras().getString(\"roomName\");\r\n        isMyPost = getIntent().getExtras().getBoolean(\"isMyPost\");\r\n        listTagNum = getIntent().getExtras().getInt(\"listTagNum\");\r\n        button = (ImageButton) findViewById(R.id.messageActivity_button);\r\n        editText = (EditText) findViewById(R.id.messageActivity_editText);\r\n        recyclerView = (RecyclerView)findViewById(R.id.messageActivity_reclclerview);\r\n        final String myUid = FirebaseAuth.getInstance().getCurrentUser().getUid();\r\n//        System.out.println(\"test oncreate arrNick1 \"+ arrayList);\r\n        user_arrayList = new ArrayList<String>();\r\n\r\n        roomNum=0;\r\n//        System.out.println(\"test oncreate arrNick2 \"+arrayList);\r\n        Map<String, Object> map = new HashMap<>();\r\n\r\n        FirebaseMessaging.getInstance().getToken()\r\n                .addOnCompleteListener(new OnCompleteListener<String>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<String> task) {\r\n                        if (!task.isSuccessful()) {\r\n//                            System.out.println(\"Fetching FCM registration token failed\" + task.getException());\r\n                            return;\r\n                        }\r\n                        // Get new FCM registration token\r\n                        String token = task.getResult();\r\n\r\n//                        System.out.println(\"fcm map 1\" + token);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid).child(\"token\").setValue(token);\r\n\r\n                        map.put(\"fcmToken\", token);\r\n   //                     System.out.println(\"fcm map \" + map.keySet());\r\n                        String msg = getString(R.string.msg_token_fmt, token);\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid).child(\"token\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                                mToken = snapshot.getValue().toString();\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n     //   System.out.println(\"myPostAdapter to chatactivity1 \"+ arr_participated_uid);\r\n\r\n        //myPostAdapter에서 클릭해서 채팅방 생성\r\n        if(isMyPost.equals(true)){\r\n\r\n          //  System.out.println(\"myPostAdapter to chatactivity2 \"+ arr_participated_uid);\r\n\r\n          //  System.out.println(\"myPostAdapter to chatactivity3 \"+ arrayList);\r\n            chat_list = false;\r\n            arrayList = new ArrayList<>();\r\n            for(String element : arr_participated_uid){\r\n                arrayList.add(element);\r\n            }\r\n          //  System.out.println(\"myPostAdapter to chatactivity4 \"+ arrayList);\r\n            chatRoomName = str_roomName;\r\n        }\r\n\r\n        //peopleFragment->chatActivity\r\n        if(chat_list == false){\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"users/\"+uid)\r\n                    .equalTo(true).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for(DataSnapshot item : dataSnapshot.getChildren()) {\r\n                        user_arrayList.clear();\r\n                        ChatModel chatModel = item.getValue(ChatModel.class);\r\n                        roomNum++;\r\n                       // System.out.println(\"arrayList real item\"+ arrayList);\r\n                        for(String key : chatModel.users.keySet()){\r\n                            user_arrayList.add(key);\r\n                        }\r\n                        //System.out.println(\"arrayList real user_arrayList \"+ user_arrayList);\r\n                       // System.out.println(\"arrayList real \"+ arrayList);\r\n\r\n                    }\r\n                    ChatModel chatModel = new ChatModel();\r\n                    for(String element: arrayList){\r\n                        //user uid\r\n                    //    System.out.println(\"test arralist element \" + element);\r\n                        chatModel.users.put(element, true);\r\n                    }\r\n                    chatModel.setChatRoomUid(chatRoomUid);\r\n                    chatModel.setRoomName(chatRoomName);\r\n                    chatModel.setRoomNum(roomNum);\r\n                 //   System.out.println(\"test chatModel chatModel users \"+chatModel.users);\r\n                 //   System.out.println(\"test chatModel chatRoomUid \"+chatModel.getChatRoomUid());\r\n\r\n                    if(chatRoomUid == null){\r\n\r\n                        button.setEnabled(false);\r\n                        first_chat =true;\r\n\r\n                        FirebaseDatabase.getInstance().getReference().child(\"chatrooms\")\r\n                                .push().setValue(chatModel)\r\n                                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                    @Override\r\n                                    public void onSuccess(Void aVoid) {\r\n\r\n//                                        checkChatRoom();\r\n                                    }\r\n                                });\r\n                    }\r\n                    checkChatRoom();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(DatabaseError databaseError) {\r\n\r\n                }\r\n            });\r\n        }\r\n        //채팅 탭 ->chatActivity\r\n        else{\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"roomNum\").equalTo(listTagNum)\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            for(DataSnapshot item : dataSnapshot.getChildren()) {\r\n                                ChatModel chatModel = item.getValue(ChatModel.class);\r\n                                chatRoomUid = item.getKey();\r\n                              //  System.out.println(\"test dataSnapshot 666  \" + dataSnapshot);\r\n                              //  System.out.println(\"test item 666  \" + item);\r\n                              //  System.out.println(\"test listTagNum 666  \" + listTagNum);\r\n                              //  System.out.println(\"test chatRoomUid 666  \" + chatRoomUid);\r\n                                first_chat = false;\r\n                                recyclerView.setLayoutManager(new LinearLayoutManager(ChatActivity.this));\r\n                                recyclerView.setAdapter(new RecyclerViewAdapter());\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"users/\"+uid)\r\n                    .equalTo(true).addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(DataSnapshot dataSnapshot) {\r\n                    for (DataSnapshot item : dataSnapshot.getChildren()) {\r\n                        ChatModel chatModel = item.getValue(ChatModel.class);\r\n                        roomNum++;\r\n\r\n                        //chatModel의 users랑 arrayList의 값들이 모두 같으면\r\n                        //이미 존재하는 채팅방이라고봐야\r\n                        for (String key : chatModel.users.keySet()) {\r\n                            user_arrayList.add(key);\r\n                        }//이건 chatroom 안에 같이 있는 users arrayList\r\n\r\n\r\n                       // System.out.println(\"test userarrayList \"+ user_arrayList);\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        //채팅방 내에서 메세지 전송 버튼\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n\r\n            @Override\r\n            public void onClick(View view) {\r\n               // System.out.println(\"Send msg token \"+arrayList);\r\n               // System.out.println(\"Send msg token1 \"+mToken);\r\n               // System.out.println(\"Send msg token2 \"+map.entrySet());\r\n\r\n                if(chatRoomUid == null) {\r\n                    checkChatRoom();\r\n                }\r\n                else {\r\n                    if(editText.getText().toString().equals(\"\")){\r\n                    }\r\n                    else{\r\n                        arr_Nick = new HashMap<>();\r\n                        token_List = new HashMap<>();\r\n                        FirebaseDatabase.getInstance().getReference().child(\"users\").addValueEventListener(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                for (DataSnapshot item : snapshot.getChildren()) {\r\n                                    UserAccount userAccount = item.getValue(UserAccount.class);\r\n                                    //System.out.println(\"userAccount \" +userAccount.getNickName());\r\n                                   // System.out.println(\"token token \" +userAccount.getToken());\r\n                                    arr_Nick.put(userAccount.getNickName(), userAccount.getUid());\r\n                                    token_List.put(userAccount.getToken(), userAccount.getUid());\r\n\r\n                                }\r\n                                ChatModel.Comment comment = new ChatModel.Comment();\r\n                                comment.uid = uid;\r\n                                comment.msg = editText.getText().toString();\r\n                                comment.timestamp = ServerValue.TIMESTAMP;\r\n                                for (String key : arr_Nick.keySet()) {\r\n                                    String value = arr_Nick.get(key);\r\n                                    if (value.equals(uid)) {\r\n                                        comment.nickname = key;\r\n                                    } else {\r\n                                  //      System.out.println(\"wrong\");\r\n                                    }\r\n\r\n                                }\r\n\r\n                                FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").child(chatRoomUid).child(\"users\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                                    @Override\r\n                                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                        for(DataSnapshot item : snapshot.getChildren()){\r\n                                         //   System.out.println(\"valuevaluevalue \"+ item.getKey());\r\n\r\n                                            for(String key : token_List.keySet()) {\r\n                                                String value = token_List.get(key);\r\n\r\n                                           //     System.out.println(\"arrayList element \"+item.getKey());\r\n                                           //     System.out.println(\"arrayList key \"+key);\r\n                                           //     System.out.println(\"arrayList value \"+value);\r\n                                                if(value.equals(item.getKey())){\r\n                                            //        System.out.println(\"arrayList equals \"+item.getKey());\r\n                                                    SendNotification.sendNotification(key, \"메세지가 도착했습니다!\", comment.nickname);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                    }\r\n                                });\r\n\r\n                                FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").child(chatRoomUid).child(\"comments\").push().setValue(comment).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<Void> task) {\r\n                                        editText.setText(\"\");\r\n                                    }\r\n                                });\r\n\r\n                            }\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        checkChatRoom();\r\n    }\r\n\r\n    public void  checkChatRoom(){\r\n        FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").orderByChild(\"users/\"+uid).equalTo(true)\r\n                .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(DataSnapshot dataSnapshot) {\r\n                        for(DataSnapshot item : dataSnapshot.getChildren()){\r\n                            chatRoomUidd = item.getKey();\r\n                            //System.out.println(\"test checkChatRoom chatRoomUidd \"+chatRoomUidd);\r\n                            //System.out.println(\"test checkChatRoom chatRoomUid2 \"+chatRoomUid);\r\n                            //System.out.println(\"test checkChatRoom first_chat \"+ first_chat);\r\n                            if(first_chat){\r\n                                chatRoomUid = chatRoomUidd;\r\n                            }\r\n                            button.setEnabled(true);\r\n                            recyclerView.setLayoutManager(new LinearLayoutManager(ChatActivity.this));\r\n                            recyclerView.setAdapter(new RecyclerViewAdapter());\r\n\r\n                        }\r\n                    }\r\n                    @Override\r\n                    public void onCancelled(DatabaseError databaseError) { }\r\n                });\r\n    }\r\n\r\n    class RecyclerViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder>{\r\n        List<ChatModel.Comment> comments;\r\n        UserAccount userModel;\r\n\r\n        public RecyclerViewAdapter() {\r\n            comments = new ArrayList<>();\r\n            FirebaseDatabase.getInstance().getReference().child(\"users\").child(uid)\r\n                    .addListenerForSingleValueEvent(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            userModel = dataSnapshot.getValue(UserAccount.class);\r\n                            //System.out.println(\"test please userModel \"+ userModel.uid);\r\n\r\n                            getMessageList();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n                        }\r\n                    });\r\n        }\r\n\r\n        void getMessageList(){\r\n            System.out.println(\"getMessageList chatRoomUid \" + chatRoomUid);\r\n\r\n            FirebaseDatabase.getInstance().getReference().child(\"chatrooms\").child(chatRoomUid).child(\"comments\")\r\n                    .addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(DataSnapshot dataSnapshot) {\r\n                            comments.clear();\r\n                            for(DataSnapshot item : dataSnapshot.getChildren()){\r\n                                comments.add(item.getValue(ChatModel.Comment.class));\r\n                             //   System.out.println(\"please comment item \" + item);\r\n                            }\r\n                            //메세지가 갱신\r\n                            notifyDataSetChanged();\r\n                            recyclerView.scrollToPosition(comments.size() - 1);\r\n                        }\r\n                        @Override\r\n                        public void onCancelled(DatabaseError databaseError) {\r\n\r\n                        }\r\n                    });\r\n        }\r\n\r\n        @Override\r\n        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\r\n            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_message,parent,false);\r\n            return new MessageViewHolder(view);\r\n        }\r\n\r\n        @Override\r\n        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {\r\n            MessageViewHolder messageViewHolder = ((MessageViewHolder)holder);\r\n            //내가보낸 메세지\r\n            if(comments.get(position).uid.equals(uid)){\r\n                messageViewHolder.textView_message.setText(comments.get(position).msg);\r\n                messageViewHolder.textView_message.setBackgroundResource(R.drawable.send_no);\r\n                messageViewHolder.linearLayout_destination.setVisibility(View.INVISIBLE);\r\n                messageViewHolder.textView_message.setTextSize(10);\r\n                messageViewHolder.linearLayout_main.setGravity(Gravity.RIGHT);\r\n                //상대방이 보낸 메세지\r\n            }else {\r\n                messageViewHolder.textview_name.setText(comments.get(position).nickname);\r\n                messageViewHolder.linearLayout_destination.setVisibility(View.VISIBLE);\r\n                messageViewHolder.textView_message.setBackgroundResource(R.drawable.receive_no);\r\n                messageViewHolder.textView_message.setText(comments.get(position).msg);\r\n                messageViewHolder.textView_message.setTextSize(10);\r\n                messageViewHolder.linearLayout_main.setGravity(Gravity.LEFT);\r\n            }\r\n            long unixTime = (long) comments.get(position).timestamp;\r\n            Date date = new Date(unixTime);\r\n            simpleDateFormat.setTimeZone(TimeZone.getTimeZone(\"Asia/Seoul\"));\r\n            String time = simpleDateFormat.format(date);\r\n            messageViewHolder.textView_timestamp.setText(time);\r\n        }\r\n\r\n        @Override\r\n        public int getItemCount() {\r\n            return comments.size();\r\n        }\r\n\r\n        private class MessageViewHolder extends RecyclerView.ViewHolder {\r\n            public TextView textView_message;\r\n            public TextView textview_name;\r\n            public LinearLayout linearLayout_destination;\r\n            public LinearLayout linearLayout_main;\r\n            public TextView textView_timestamp;\r\n\r\n            public MessageViewHolder(View view) {\r\n                super(view);\r\n                textView_message = (TextView) view.findViewById(R.id.messageItem_textView_message);\r\n                textview_name = (TextView)view.findViewById(R.id.messageItem_textview_name);\r\n                linearLayout_destination = (LinearLayout)view.findViewById(R.id.messageItem_linearlayout_destination);\r\n                linearLayout_main = (LinearLayout)view.findViewById(R.id.messageItem_linearlayout_main);\r\n                textView_timestamp = (TextView)view.findViewById(R.id.messageItem_textview_timestamp);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        super.onBackPressed();\r\n        finish();\r\n        Intent intent = new Intent(ChatActivity.this, MainActivity.class); //지금 액티비티에서 다른 액티비티로 이동하는 인텐트 설정\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);    //인텐트 플래그 설정\r\n        startActivity(intent);  //인텐트 이동\r\n        overridePendingTransition(R.anim.fromleft,R.anim.toright);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home:\r\n                finish();\r\n                Intent intent = new Intent(ChatActivity.this, MainActivity.class); //지금 액티비티에서 다른 액티비티로 이동하는 인텐트 설정\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);    //인텐트 플래그 설정\r\n                startActivity(intent);  //인텐트 이동\r\n                overridePendingTransition(R.anim.fromleft,R.anim.toright);\r\n                break;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java b/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java
--- a/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java	(revision bb88a6b9380a4091636497bd9c11b1aa849f3b49)
+++ b/app/src/main/java/com/example/knu_matching/chatting/ChatActivity.java	(date 1642055486348)
@@ -3,6 +3,7 @@
 import android.content.Intent;
 import android.os.Bundle;
 import android.view.Gravity;
+import android.view.KeyEvent;
 import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
@@ -243,6 +244,19 @@
 
         }
 
+        editText.setOnKeyListener(new View.OnKeyListener() {
+            @Override
+            public boolean onKey(View v, int keyCode, KeyEvent event) {
+                switch (keyCode){
+                    case KeyEvent.KEYCODE_ENTER:
+                        msgEnter();
+                        break;
+                }
+                return true;
+            }
+        });
+
+
         //채팅방 내에서 메세지 전송 버튼
         button.setOnClickListener(new View.OnClickListener() {
 
@@ -251,85 +265,89 @@
                // System.out.println("Send msg token "+arrayList);
                // System.out.println("Send msg token1 "+mToken);
                // System.out.println("Send msg token2 "+map.entrySet());
+                msgEnter();
 
-                if(chatRoomUid == null) {
-                    checkChatRoom();
-                }
-                else {
-                    if(editText.getText().toString().equals("")){
-                    }
-                    else{
-                        arr_Nick = new HashMap<>();
-                        token_List = new HashMap<>();
-                        FirebaseDatabase.getInstance().getReference().child("users").addValueEventListener(new ValueEventListener() {
-                            @Override
-                            public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                for (DataSnapshot item : snapshot.getChildren()) {
-                                    UserAccount userAccount = item.getValue(UserAccount.class);
-                                    //System.out.println("userAccount " +userAccount.getNickName());
-                                   // System.out.println("token token " +userAccount.getToken());
-                                    arr_Nick.put(userAccount.getNickName(), userAccount.getUid());
-                                    token_List.put(userAccount.getToken(), userAccount.getUid());
+            }
+        });
+        checkChatRoom();
+    }
+
+    public void msgEnter(){
+        if(chatRoomUid == null) {
+            checkChatRoom();
+        }
+        else {
+            if(editText.getText().toString().equals("")){
+            }
+            else{
+                arr_Nick = new HashMap<>();
+                token_List = new HashMap<>();
+                FirebaseDatabase.getInstance().getReference().child("users").addValueEventListener(new ValueEventListener() {
+                    @Override
+                    public void onDataChange(@NonNull DataSnapshot snapshot) {
+                        for (DataSnapshot item : snapshot.getChildren()) {
+                            UserAccount userAccount = item.getValue(UserAccount.class);
+                            //System.out.println("userAccount " +userAccount.getNickName());
+                            // System.out.println("token token " +userAccount.getToken());
+                            arr_Nick.put(userAccount.getNickName(), userAccount.getUid());
+                            token_List.put(userAccount.getToken(), userAccount.getUid());
 
-                                }
-                                ChatModel.Comment comment = new ChatModel.Comment();
-                                comment.uid = uid;
-                                comment.msg = editText.getText().toString();
-                                comment.timestamp = ServerValue.TIMESTAMP;
-                                for (String key : arr_Nick.keySet()) {
-                                    String value = arr_Nick.get(key);
-                                    if (value.equals(uid)) {
-                                        comment.nickname = key;
-                                    } else {
-                                  //      System.out.println("wrong");
-                                    }
+                        }
+                        ChatModel.Comment comment = new ChatModel.Comment();
+                        comment.uid = uid;
+                        comment.msg = editText.getText().toString();
+                        comment.timestamp = ServerValue.TIMESTAMP;
+                        for (String key : arr_Nick.keySet()) {
+                            String value = arr_Nick.get(key);
+                            if (value.equals(uid)) {
+                                comment.nickname = key;
+                            } else {
+                                //      System.out.println("wrong");
+                            }
 
-                                }
+                        }
 
-                                FirebaseDatabase.getInstance().getReference().child("chatrooms").child(chatRoomUid).child("users").addListenerForSingleValueEvent(new ValueEventListener() {
-                                    @Override
-                                    public void onDataChange(@NonNull DataSnapshot snapshot) {
-                                        for(DataSnapshot item : snapshot.getChildren()){
-                                         //   System.out.println("valuevaluevalue "+ item.getKey());
+                        FirebaseDatabase.getInstance().getReference().child("chatrooms").child(chatRoomUid).child("users").addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                for(DataSnapshot item : snapshot.getChildren()){
+                                    //   System.out.println("valuevaluevalue "+ item.getKey());
 
-                                            for(String key : token_List.keySet()) {
-                                                String value = token_List.get(key);
+                                    for(String key : token_List.keySet()) {
+                                        String value = token_List.get(key);
 
-                                           //     System.out.println("arrayList element "+item.getKey());
-                                           //     System.out.println("arrayList key "+key);
-                                           //     System.out.println("arrayList value "+value);
-                                                if(value.equals(item.getKey())){
+                                        //     System.out.println("arrayList element "+item.getKey());
+                                        //     System.out.println("arrayList key "+key);
+                                        //     System.out.println("arrayList value "+value);
+                                        if(value.equals(item.getKey())){
                                             //        System.out.println("arrayList equals "+item.getKey());
-                                                    SendNotification.sendNotification(key, "메세지가 도착했습니다!", comment.nickname);
-                                                }
-                                            }
-                                        }
-                                    }
+                                            SendNotification.sendNotification(key, "메세지가 도착했습니다!", comment.nickname);
+                                        }
+                                    }
+                                }
+                            }
 
-                                    @Override
-                                    public void onCancelled(@NonNull DatabaseError error) {
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
 
-                                    }
-                                });
+                            }
+                        });
 
-                                FirebaseDatabase.getInstance().getReference().child("chatrooms").child(chatRoomUid).child("comments").push().setValue(comment).addOnCompleteListener(new OnCompleteListener<Void>() {
-                                    @Override
-                                    public void onComplete(@NonNull Task<Void> task) {
-                                        editText.setText("");
-                                    }
-                                });
+                        FirebaseDatabase.getInstance().getReference().child("chatrooms").child(chatRoomUid).child("comments").push().setValue(comment).addOnCompleteListener(new OnCompleteListener<Void>() {
+                            @Override
+                            public void onComplete(@NonNull Task<Void> task) {
+                                editText.setText("");
+                            }
+                        });
 
-                            }
-                            @Override
-                            public void onCancelled(@NonNull DatabaseError error) {
+                    }
+                    @Override
+                    public void onCancelled(@NonNull DatabaseError error) {
 
-                            }
-                        });
-                    }
-                }
-            }
-        });
-        checkChatRoom();
+                    }
+                });
+            }
+        }
     }
 
     public void  checkChatRoom(){
Index: app/src/main/java/com/example/knu_matching/Post/CommentAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.Post;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.knu_matching.GetSet.CommentItem;\r\nimport com.example.knu_matching.GetSet.Post;\r\nimport com.example.knu_matching.GetSet.Report;\r\nimport com.example.knu_matching.MainActivity;\r\nimport com.example.knu_matching.R;\r\nimport com.example.knu_matching.UserAccount;\r\nimport com.example.knu_matching.membermanage.RegisterActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.SuccessContinuation;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.CollectionReference;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.firestore.auth.User;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport retrofit2.http.POST;\r\n\r\npublic class CommentAdapter extends RecyclerView.Adapter<CommentAdapter.ViewHolder> {\r\n    String TAG = \"CommentAdapter\";\r\n    private ArrayList<CommentItem> mData = null;\r\n    private FirebaseAuth auth = FirebaseAuth.getInstance();\r\n    String str_Email;\r\n    String str_Uid;\r\n    String str_post_uid;\r\n    String str_Id;\r\n    static String str_Comment_uid;\r\n    String str_Date;\r\n    int str_count;\r\n    LinearLayout layout_comment;\r\n\r\n\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    RecyclerView rv;\r\n\r\n    public CommentAdapter(ArrayList<CommentItem> data) {\r\n        mData = data;\r\n    }\r\n\r\n    Context context;\r\n\r\n\r\n    // onCreateViewHolder : 아이템 뷰를 위한 뷰홀더 객체를 생성하여 리턴\r\n    @NonNull\r\n    @Override\r\n    public CommentAdapter.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        Context context = parent.getContext();\r\n        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n\r\n        View view = inflater.inflate(R.layout.post_owner_comment_item, parent, false);\r\n        CommentAdapter.ViewHolder vh = new CommentAdapter.ViewHolder(view);\r\n\r\n        return vh;\r\n    }\r\n\r\n    // onBindViewHolder : position에 해당하는 데이터를 뷰홀더의 아이템뷰에 표시\r\n    @Override\r\n    public void onBindViewHolder(@NonNull CommentAdapter.ViewHolder holder, @SuppressLint(\"RecyclerView\") int position) {\r\n        CommentItem item = mData.get(position);\r\n        System.out.println(\"comment item position\" + position);\r\n        System.out.println(\"comment item \" + item.getStr_Comment_uid());\r\n\r\n        item.setStr_count(position);\r\n\r\n        str_Email = item.getStr_Email();\r\n        str_Uid = item.getStr_Uid();\r\n        str_post_uid = item.getStr_Post_uid();\r\n        str_Comment_uid = item.getStr_Comment_uid();\r\n        str_Date = item.getStr_Date();\r\n        str_count = item.getStr_count();\r\n\r\n        if(position==0){\r\n            holder.tv_content.setVisibility(View.GONE);\r\n            holder.tv_date.setVisibility(View.GONE);\r\n            holder.btn_del_comment.setVisibility(View.GONE);\r\n            holder.tv_nickname.setText(item.getStr_NickName()+\"님의 글 입니다.\");\r\n        }\r\n        else{\r\n\r\n            holder.tv_nickname.setText(item.getStr_NickName());\r\n            holder.tv_content.setText(item.getStr_Content());\r\n            holder.tv_date.setText(item.getStr_Date());\r\n        }\r\n        if ((str_Email.equals(auth.getCurrentUser().getEmail())) == false) {\r\n            holder.btn_del_comment.setVisibility(View.GONE);\r\n        }\r\n        if ((str_Email.equals(auth.getCurrentUser().getEmail())) == true) {\r\n            holder.btn_report.setVisibility(View.GONE);\r\n        }\r\n        System.out.println(\"comment item str_Uid \" + str_Uid);\r\n        System.out.println(\"comment item str_Email \" + str_Email);\r\n        System.out.println(\"comment item str_Comment_uid \" + str_Comment_uid);\r\n        System.out.println(\"comment item str_post_uid \" + str_post_uid);\r\n        System.out.println(\"comment item str_count \" + str_count);\r\n        System.out.println(\"comment item str_Date \" + str_Date);\r\n        System.out.println(\"\\n \");\r\n\r\n        holder.btn_del_comment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                db.collection(\"Post\").document(str_post_uid).collection(\"Comment\").orderBy(\"str_Date\", Query.Direction.ASCENDING).get()\r\n                        .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                Integer cnt = 0;\r\n                                for (QueryDocumentSnapshot documentSnapshot : task.getResult()) {\r\n                                    System.out.println(\"same comment getId \" + documentSnapshot.getId());\r\n                                    System.out.println(\"same comment cnt \" + cnt);\r\n                                    System.out.println(\"same comment uid \" + str_Comment_uid);\r\n                                    System.out.println(\"same comment position \" + position);\r\n                                    System.out.println(\"same comment str_count \" + str_count);\r\n\r\n                                    if (cnt.equals(position)) {\r\n                                        System.out.println(\"same comment uid db \" + documentSnapshot.getId());\r\n                                        str_Comment_uid = documentSnapshot.getId();\r\n                                        System.out.println(\"same comment uid \" + str_Comment_uid);\r\n\r\n                                        db.collection(\"Post\").document(str_post_uid)\r\n                                                .collection(\"Comment\").document(str_Comment_uid)\r\n                                                .delete().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                            @Override\r\n                                            public void onComplete(@NonNull Task<Void> task) {\r\n                                                if (task.isSuccessful()) {\r\n                                                    notifyDataSetChanged();\r\n                                                }\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    cnt++;\r\n                                }\r\n                                cnt = 0;\r\n                            }\r\n                        });\r\n                delItem(position);\r\n            }\r\n        });\r\n        holder.btn_report.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                db.collection(\"Post\").document(str_post_uid).collection(\"Comment\").orderBy(\"str_Date\", Query.Direction.ASCENDING).get()\r\n                        .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                            @Override\r\n                            public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                Integer cnt = 0;\r\n                                for (QueryDocumentSnapshot documentSnapshot : task.getResult()) {\r\n//                                    System.out.println(\"btn_report comment getId \" + documentSnapshot.getId());\r\n//                                    System.out.println(\"btn_report comment cnt \" + cnt);\r\n//                                    System.out.println(\"btn_report comment uid \" + str_Comment_uid);\r\n//                                    System.out.println(\"btn_report comment position \" + position);\r\n//                                    System.out.println(\"btn_report comment str_count \" + str_count);\r\n                                    //System.out.println(\"documentSnapshot test\" + documentSnapshot.getString(str_Comment_uid));\r\n\r\n                                    if (cnt.equals(position)) {\r\n                                        System.out.println(\"btn_report comment uid db \" + documentSnapshot.getId());\r\n                                        str_Comment_uid = documentSnapshot.getId();\r\n                                        System.out.println(\"btn_report comment uid \" + str_count);\r\n                                        System.out.println(\"btn_report comment uid \" + str_Comment_uid);\r\n\r\n                                        AlertDialog.Builder builder = new AlertDialog.Builder(layout_comment.getContext());\r\n                                        builder.setTitle(\"댓글 신고\");\r\n                                        builder.setMessage(\"신고하시겠습니까?\");\r\n                                        builder.setNegativeButton(\"예\",\r\n                                                new DialogInterface.OnClickListener() {\r\n                                                    @Override\r\n                                                    public void onClick(DialogInterface dialog, int which) {\r\n                                                        //예 눌렀을때의 이벤트 처리\r\n                                                        Report report = new Report();\r\n                                                        report.setStr_Reporter_uid(auth.getCurrentUser().getUid());\r\n                                                        report.setStr_comment_uid(str_Comment_uid);\r\n                                                        report.setStr_post_uid(str_post_uid);\r\n                                                        report.setStr_comment_email(str_Email);\r\n                                                        CollectionReference checkReport = db.collection(\"Report\");\r\n                                                        checkReport.whereEqualTo(\"str_comment_uid\",str_Comment_uid).whereEqualTo(\"str_Reporter_uid\", auth.getCurrentUser().getUid())\r\n                                                                .get()\r\n                                                                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                                                    @Override\r\n                                                                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                                        if (task.isSuccessful()) {\r\n                                                                            for (QueryDocumentSnapshot document : task.getResult()) {\r\n                                                                                Report reporter = document.toObject(Report.class);\r\n                                                                                if (auth.getCurrentUser().getUid().equals(reporter.getStr_Reporter_uid())) {\r\n                                                                                    AlertDialog.Builder dlg = new AlertDialog.Builder(layout_comment.getContext());\r\n                                                                                    dlg.setTitle(\"신고 접수\");\r\n                                                                                    dlg.setMessage(\"이미 접수된 신고입니다.\");\r\n                                                                                    dlg.setNeutralButton(\"닫기\", new DialogInterface.OnClickListener() {\r\n                                                                                        @Override\r\n                                                                                        public void onClick(DialogInterface dialog, int which) {\r\n                                                                                            dialog.cancel();\r\n                                                                                        }\r\n                                                                                    }); // 버튼생성 ,default로 close\r\n                                                                                    dlg.setCancelable(false);//뒤로가기버튼 비활성화\r\n                                                                                    dlg.show();\r\n                                                                                    return;\r\n                                                                                }\r\n                                                                            }\r\n                                                                            checkReport.get().addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                                                                                @Override\r\n                                                                                public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                                                                                    if (task.isSuccessful()) {\r\n                                                                                        checkReport.add(report).addOnCompleteListener(new OnCompleteListener<DocumentReference>() {\r\n                                                                                            @Override\r\n                                                                                            public void onComplete(@NonNull Task<DocumentReference> task) {\r\n                                                                                                AlertDialog.Builder dlg = new AlertDialog.Builder(layout_comment.getContext());\r\n                                                                                                dlg.setTitle(\"신고 접수\");\r\n                                                                                                dlg.setMessage(\"신고 접수가 완료되었습니다.\");\r\n                                                                                                dlg.setNeutralButton(\"닫기\", new DialogInterface.OnClickListener() {\r\n\r\n                                                                                                    @Override\r\n                                                                                                    public void onClick(DialogInterface dialog, int which) {\r\n                                                                                                        dialog.cancel();\r\n                                                                                                    }\r\n                                                                                                }); // 버튼생성 ,default로 close\r\n                                                                                                dlg.setCancelable(false);//뒤로가기버튼 비활성화\r\n                                                                                                dlg.show();\r\n                                                                                            }\r\n                                                                                        }).addOnFailureListener(new OnFailureListener() {\r\n                                                                                            @Override\r\n                                                                                            public void onFailure(@NonNull Exception e) {\r\n                                                                                                dialog.cancel();\r\n                                                                                                Toast.makeText(layout_comment.getContext(), \"신고 접수 실패\", Toast.LENGTH_LONG).show();\r\n                                                                                            }\r\n                                                                                        });\r\n                                                                                    }\r\n                                                                                }\r\n                                                                            }).addOnFailureListener(new OnFailureListener() {\r\n                                                                                @Override\r\n                                                                                public void onFailure(@NonNull Exception e) {\r\n                                                                                    Toast.makeText(layout_comment.getContext(), \"신고 접수에 실패하였습니다.\", Toast.LENGTH_LONG).show();\r\n                                                                                }\r\n                                                                            });\r\n                                                                        }\r\n                                                                    }\r\n                                                                });\r\n                                                    }\r\n                                                });\r\n\r\n                                        builder.setPositiveButton(\"아니오\",\r\n                                                new DialogInterface.OnClickListener() {\r\n                                                    @Override\r\n                                                    public void onClick(DialogInterface dialog, int which) {\r\n                                                        //아니오 눌렀을때의 이벤트 처리\r\n                                                        dialog.cancel();\r\n                                                    }\r\n                                                });\r\n\r\n                                        builder.show();\r\n//                                        db.collection(\"Post\").document(str_post_uid)\r\n//                                                .collection(\"Comment\").document(str_Comment_uid)\r\n//                                                .delete().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n//                                            @Override\r\n//                                            public void onComplete(@NonNull Task<Void> task) {\r\n//                                                if (task.isSuccessful()) {\r\n//                                                    notifyDataSetChanged();\r\n//                                                }\r\n//                                            }\r\n//                                        });\r\n                                    }\r\n                                    cnt++;\r\n                                }\r\n                                cnt = 0;\r\n                            }\r\n                        });\r\n//                System.out.println(\"uid값\" + mData.get(position).getStr_Comment_uid());\r\n//                deleteDialog(str_Comment_uid);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private int position;\r\n\r\n    // 댓글 삭제 눌렀을때 작동\r\n    private void delItem(int position) {\r\n        System.out.println(\"position \" + position);\r\n        mData.remove(position);\r\n        notifyItemRemoved(position);\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n    public int getPosition() {\r\n        return position;\r\n    }\r\n\r\n    public void setPosition(int position) {\r\n        this.position = position;\r\n    }\r\n\r\n    // getItemCount : 전체 데이터의 개수를 리턴\r\n    @Override\r\n    public int getItemCount() {\r\n        return mData.size();\r\n    }\r\n\r\n    public class ViewHolder extends RecyclerView.ViewHolder {\r\n        TextView tv_nickname, tv_content, tv_date;\r\n        ImageButton btn_report, btn_del_comment;\r\n\r\n\r\n        ViewHolder(View itemView) {\r\n            super(itemView);\r\n\r\n            tv_nickname = itemView.findViewById(R.id.tv_nickname);\r\n            tv_content = itemView.findViewById(R.id.tv_content);\r\n            tv_date = itemView.findViewById(R.id.tv_date);\r\n//          btn_comment = itemView.findViewById(R.id.btn_comment);\r\n            btn_report = itemView.findViewById(R.id.btn_report);\r\n            btn_del_comment = itemView.findViewById(R.id.btn_del_comment);\r\n            layout_comment = itemView.findViewById(R.id.layout_comment);\r\n\r\n            System.out.println(\"현재 이메일 Adapter\" + auth.getCurrentUser().getEmail());\r\n            System.out.println(\"댓글 이메일 Adapter\" + str_Email);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/Post/CommentAdapter.java b/app/src/main/java/com/example/knu_matching/Post/CommentAdapter.java
--- a/app/src/main/java/com/example/knu_matching/Post/CommentAdapter.java	(revision bb88a6b9380a4091636497bd9c11b1aa849f3b49)
+++ b/app/src/main/java/com/example/knu_matching/Post/CommentAdapter.java	(date 1642051620050)
@@ -107,7 +107,7 @@
             holder.tv_content.setVisibility(View.GONE);
             holder.tv_date.setVisibility(View.GONE);
             holder.btn_del_comment.setVisibility(View.GONE);
-            holder.tv_nickname.setText(item.getStr_NickName()+"님의 글 입니다.");
+            holder.tv_nickname.setText("");
         }
         else{
 
Index: app/src/main/java/com/example/knu_matching/Nav/Scrap_Adapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.knu_matching.Nav;\r\n\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.knu_matching.R;\r\nimport com.example.knu_matching.WebView;\r\nimport com.example.knu_matching.board.RegionCode;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\n\r\npublic class Scrap_Adapter extends RecyclerView.Adapter<Scrap_Adapter.RecyclerViewHolders>{\r\n    private FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private FirebaseAuth auth = FirebaseAuth.getInstance();\r\n    Context context;\r\n    ArrayList<HashMap<String, String>> noticeList; //공지사항 정보 담겨있음\r\n    HashMap<String, String> noticeItem;\r\n\r\n    public Scrap_Adapter(Context context, ArrayList<HashMap<String, String>> noticeList) {\r\n        this.context = context;\r\n        this.noticeList = noticeList;\r\n    //    System.out.println(\"리스트\" + noticeList);\r\n    }\r\n    @NonNull\r\n    @Override\r\n    public RecyclerViewHolders onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_scrap, null);\r\n        RecyclerViewHolders rcv = new RecyclerViewHolders(v);\r\n        return rcv;\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull RecyclerViewHolders holder, int position) {\r\n        String region = \"\";\r\n        noticeItem = noticeList.get(position);\r\n        holder.tv_title.setText(noticeItem.get(\"title\")); //작성자\r\n        holder.tv_place.setText(noticeItem.get(\"place\")); //작성자\r\n        RegionCode regionCode = new RegionCode();\r\n        if (noticeItem.get(\"region\") == null) {\r\n            region = \"사이트 조회 요망\";\r\n        } else {\r\n            region = regionCode.getRegion(noticeItem.get(\"region\"));\r\n        }\r\n        holder.tv_region.setText(region); //작성자\r\n        holder.tv_startDate.setText(noticeItem.get(\"startDate\")); //작성자\r\n        holder.tv_endDate.setText(noticeItem.get(\"endDate\")); //작성자\r\n        holder.jobabaUrl = noticeItem.get(\"url\");\r\n        holder.UID = noticeItem.get(\"UID\");\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return this.noticeList.size();\r\n    }\r\n    public class RecyclerViewHolders extends RecyclerView.ViewHolder {\r\n        TextView tv_title;\r\n        TextView tv_place;\r\n        TextView tv_region;\r\n        TextView tv_startDate;\r\n        TextView tv_endDate;\r\n        String jobabaUrl, UID;\r\n        CardView cv;\r\n        Button btn_del_scrap, btn_recruit;\r\n        private long btnPressTime = 0;\r\n\r\n        public RecyclerViewHolders(@NonNull View itemView) {\r\n            super(itemView);\r\n            tv_title = (TextView) itemView.findViewById(R.id.tv_title);\r\n            tv_place = (TextView) itemView.findViewById(R.id.tv_place);\r\n            tv_region = (TextView) itemView.findViewById(R.id.tv_region);\r\n            tv_startDate = (TextView) itemView.findViewById(R.id.tv_startDate);\r\n            tv_endDate = (TextView) itemView.findViewById(R.id.tv_endDate);\r\n            btn_del_scrap = itemView.findViewById(R.id.btn_del_scrap);\r\n            btn_recruit = itemView.findViewById(R.id.btn_post);\r\n            cv = (CardView) itemView.findViewById(R.id.cv);\r\n\r\n            cv.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    Intent intent = new Intent(cv.getContext(), WebView.class);\r\n                    intent.putExtra(\"url\", jobabaUrl);\r\n                    cv.getContext().startActivity(intent);\r\n                }\r\n            });\r\n\r\n            btn_del_scrap.setOnClickListener(new View.OnClickListener() {\r\n\r\n                @Override\r\n                public void onClick(View v) {\r\n               //     Toast.makeText(cv.getContext(), \"삭제버튼\", Toast.LENGTH_SHORT).show();\r\n                    db.collection(\"Scrap\").document(auth.getCurrentUser().getEmail().replace(\".\", \">\")).collection(\"activity\")\r\n                            .document(UID).delete().addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                        @Override\r\n                        public void onComplete(@NonNull Task<Void> task) {\r\n                            Toast.makeText(cv.getContext(), \"삭제 되었습니다.\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(cv.getContext(), \"삭제하는 중 오류가 발생하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            btn_recruit.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    Toast.makeText(cv.getContext(), \"게시판으로 연동\", Toast.LENGTH_SHORT).show();\r\n\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/knu_matching/Nav/Scrap_Adapter.java b/app/src/main/java/com/example/knu_matching/Nav/Scrap_Adapter.java
--- a/app/src/main/java/com/example/knu_matching/Nav/Scrap_Adapter.java	(revision bb88a6b9380a4091636497bd9c11b1aa849f3b49)
+++ b/app/src/main/java/com/example/knu_matching/Nav/Scrap_Adapter.java	(date 1642051620012)
@@ -91,6 +91,7 @@
             btn_recruit = itemView.findViewById(R.id.btn_post);
             cv = (CardView) itemView.findViewById(R.id.cv);
 
+            btn_recruit.setVisibility(View.GONE);
             cv.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View v) {
@@ -119,13 +120,14 @@
                     });
                 }
             });
-            btn_recruit.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    Toast.makeText(cv.getContext(), "게시판으로 연동", Toast.LENGTH_SHORT).show();
-
-                }
-            });
+//
+//            btn_recruit.setOnClickListener(new View.OnClickListener() {
+//                @Override
+//                public void onClick(View v) {
+//                    Toast.makeText(cv.getContext(), "게시판으로 연동", Toast.LENGTH_SHORT).show();
+//
+//                }
+//            });
         }
     }
 }
Index: .idea/deploymentTargetDropDown.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\Excellent_Summer\\.android\\avd\\Pixel_2_API_30.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-01-10T06:55:42.324605200Z\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
--- a/.idea/deploymentTargetDropDown.xml	(revision bb88a6b9380a4091636497bd9c11b1aa849f3b49)
+++ b/.idea/deploymentTargetDropDown.xml	(date 1642055896703)
@@ -7,11 +7,11 @@
         <deviceKey>
           <Key>
             <type value="VIRTUAL_DEVICE_PATH" />
-            <value value="C:\Users\Excellent_Summer\.android\avd\Pixel_2_API_30.avd" />
+            <value value="C:\Users\bhyn9\.android\avd\Pixel_2_API_30.avd" />
           </Key>
         </deviceKey>
       </Target>
     </targetSelectedWithDropDown>
-    <timeTargetWasSelectedWithDropDown value="2022-01-10T06:55:42.324605200Z" />
+    <timeTargetWasSelectedWithDropDown value="2022-01-13T06:38:10.733155100Z" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/edittext_box_design.xml\" value=\"0.13240740740740742\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/ic_after_scrap.xml\" value=\"0.2203125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/ic_baseline_people_24.xml\" value=\"0.2203125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/ic_baseline_person_pin_24.xml\" value=\"0.29270833333333335\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/ic_before_scrap.xml\" value=\"0.28020833333333334\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/tab_color_selector.xml\" value=\"0.28125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_change_pass_word.xml\" value=\"0.24739583333333334\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat_fragment.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_child1_fragment.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_child2_fragment.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_child3_fragment.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_fifth_fragment.xml\" value=\"0.24739583333333334\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_idactivity.xml\" value=\"0.23697916666666666\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_first_fragment.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_fourth_fragment.xml\" value=\"0.24739583333333334\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_info_modify.xml\" value=\"0.24427083333333333\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post.xml\" value=\"0.2765625\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml\" value=\"0.1984375\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_my_participate.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_my_post.xml\" value=\"0.3734375\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_peolpe_fragment.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_post.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_fragment.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_progress_dialog.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml\" value=\"0.21770833333333334\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_scrap.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_second_fragment.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_setting.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_third_fragment.xml\" value=\"0.26510416666666664\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/fragment_mypage.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/header_layout.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/item_message.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/item_myparticipate.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/item_mypost.xml\" value=\"0.3015625\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/item_notice.xml\" value=\"0.2640625\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/item_scrap.xml\" value=\"0.3734375\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/post_owner_comment_item.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/recruitment_item.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_layout.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_post.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/menu/drawer_menu.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/Excellent_Summer/AndroidStudioProjects/Knu_Matching/app/src/main/res/menu/toolbar_post_menu.xml\" value=\"0.328125\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/chat_bubble.xml\" value=\"0.25462962962962965\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/chat_bubble_tail.xml\" value=\"0.25462962962962965\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/custom_checkbox.xml\" value=\"0.378125\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/design_button.xml\" value=\"0.25462962962962965\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/edittext_box_design.xml\" value=\"0.13385416666666666\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_after_scrap.xml\" value=\"0.13385416666666666\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_back.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_baseline_people_24.xml\" value=\"0.13385416666666666\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_baseline_person_pin_24.xml\" value=\"0.13385416666666666\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_before_scrap.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_comment.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_delete.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_edit_profile.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.13385416666666666\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_menu.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_photo.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_setting.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/ic_warning.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/progress_bg.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/drawable/tab_color_selector.xml\" value=\"0.13385416666666666\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/font/font.xml\" value=\"0.19322916666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat.xml\" value=\"0.21509433962264152\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat_fragment.xml\" value=\"0.15989583333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_idactivity.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_password.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_fourth_fragment.xml\" value=\"0.225\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_info_modify.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post.xml\" value=\"0.128125\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post2.xml\" value=\"0.1265625\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_mypage_fragment.xml\" value=\"0.24583333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_peolpe_fragment.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post.xml\" value=\"0.225\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_fragment.xml\" value=\"0.2203125\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_owner_acticity.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register2.xml\" value=\"0.24947916666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_progress_dialog.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_setting.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_visitor.xml\" value=\"0.225\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_web_view.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_chat.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_mypage.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_recruitment.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_board.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_chat.xml\" value=\"0.24583333333333332\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_chatlist.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_friend.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_message.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_notice.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/item_scrap.xml\" value=\"0.3619791666666667\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/post_owner_comment_item.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/same_member_dialog.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_layout.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_post.xml\" value=\"0.1757852077001013\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat_fragment.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_password.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post.xml\" value=\"0.5385852090032154\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post2.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_my_participate.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_my_post.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_peolpe_fragment.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_fragment.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_owner_acticity.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register2.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_progress_dialog.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_visitor.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_web_view.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_board.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_recruitment.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_board.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_chatlist.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_friend.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_message.xml\" value=\"0.536\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_myparticipate.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_mypost.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_scrap.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/post_owner_comment_item.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/recruitment_item.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_layout.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_post.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/edittext_box_design.xml\" value=\"0.26979166666666665\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_idactivity.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_password.xml\" value=\"0.2640625\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_first_fragment.xml\" value=\"0.24974358974358973\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post2.xml\" value=\"0.1296875\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_login.xml\" value=\"0.22916666666666666\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_main.xml\" value=\"0.24974358974358973\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_peolpe_fragment.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_post.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_fragment.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register2.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml\" value=\"0.25364583333333335\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml\" value=\"0.22864583333333333\" />\r\n        <entry key=\"..\\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_visitor.xml\" value=\"0.264\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision bb88a6b9380a4091636497bd9c11b1aa849f3b49)
+++ b/.idea/misc.xml	(date 1642051620401)
@@ -108,37 +108,18 @@
         <entry key="..\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/same_member_dialog.xml" value="0.1" />
         <entry key="..\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_layout.xml" value="0.1757852077001013" />
         <entry key="..\:/Users/bhyn9/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_post.xml" value="0.1757852077001013" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_chat_fragment.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_edit_profile.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_password.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post.xml" value="0.5385852090032154" />
+        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_item_post2.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_my_participate.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_my_post.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_peolpe_fragment.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_fragment.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_owner_acticity.xml" value="0.4" />
+        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_owner_acticity.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_post_register2.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_progress_dialog.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_register.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_student_certificate.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_visitor.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/activity_web_view.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_board.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/fragment_recruitment.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_board.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_chatlist.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_friend.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_message.xml" value="0.536" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_myparticipate.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_mypost.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/item_scrap.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/post_owner_comment_item.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/recruitment_item.xml" value="0.25364583333333335" />
-        <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_layout.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/ekqhd/StudioProjects/Knu_Matching/app/src/main/res/layout/toolbar_post.xml" value="0.25364583333333335" />
         <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/drawable/edittext_box_design.xml" value="0.26979166666666665" />
         <entry key="..\:/Users/yulim/AndroidStudioProjects/Knu_Matching/app/src/main/res/layout/activity_find_idactivity.xml" value="0.4" />
Index: app/src/main/res/layout/activity_find_idactivity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:gravity=\"center\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".membermanage.FindIDActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"left\"\r\n        android:layout_marginLeft=\"30dp\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        android:textSize=\"30dp\"\r\n        android:fontFamily=\"@font/tway_air\"\r\n        android:textColor=\"@color/black\"\r\n        android:text=\"아이디 찾기\"/>\r\n    <EditText\r\n        android:id=\"@+id/edt_name\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"5dp\"\r\n        android:ems=\"15\"\r\n        android:fontFamily=\"@font/tway_air\"\r\n        android:hint=\"이름을 입력해 주세요.\"\r\n        android:textSize=\"15dp\"\r\n        android:inputType=\"textPersonName\" />\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:weightSum=\"2\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_FindloginId\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:backgroundTint=\"#e8f3ff\"\r\n            android:textSize=\"20dp\"\r\n            android:fontFamily=\"@font/tway_air\"\r\n            android:textColor=\"@color/black\"\r\n            android:layout_margin=\"20dp\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"아이디 찾기\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btn_Cancel\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:backgroundTint=\"#e8f3ff\"\r\n            android:textSize=\"20dp\"\r\n            android:fontFamily=\"@font/tway_air\"\r\n            android:textColor=\"@color/black\"\r\n            android:layout_margin=\"20dp\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"취소\" />\r\n    </LinearLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_find_idactivity.xml b/app/src/main/res/layout/activity_find_idactivity.xml
--- a/app/src/main/res/layout/activity_find_idactivity.xml	(revision bb88a6b9380a4091636497bd9c11b1aa849f3b49)
+++ b/app/src/main/res/layout/activity_find_idactivity.xml	(date 1642051619999)
@@ -25,7 +25,7 @@
         android:layout_margin="5dp"
         android:ems="15"
         android:fontFamily="@font/tway_air"
-        android:hint="이름을 입력해 주세요."
+        android:hint="학번을 입력해 주세요."
         android:textSize="15dp"
         android:inputType="textPersonName" />
 
